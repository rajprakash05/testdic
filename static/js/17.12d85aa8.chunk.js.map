{"version":3,"file":"static/js/17.12d85aa8.chunk.js","mappings":"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","sources":["pages/Auth/register/Register.js"],"sourcesContent":["import \"./Register.scss\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  Button,\r\n  Stack,\r\n  useMediaQuery,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@mui/material\";\r\nimport appapi from \"../../../api/apiClient\";\r\nimport { showmessage } from \"../../../utils/toastr\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../../redux/features/authSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { buttonStyle1 } from \"../../../utils/commonStyle\";\r\nimport { setLoading } from \"../../../redux/features/appSlice\";\r\nimport { encrypt } from \"../../../utils/Crpyto\";\r\nimport { colors } from \"../../../utils/colors\";\r\nimport mobilewavybg from \"../../../assets/images/mobilewavybg.svg\";\r\nimport diztextlogo from \"../../../assets/images/diztextlogo.svg\";\r\nimport wavesbg from \"../../../assets/images/wavesbg.svg\";\r\nimport SocialCard from \"../../../components/SocialCard\";\r\nimport DetailCard from \"../../../components/DetailCard\";\r\nimport dizlogoMobile from \"../../../assets/images/dizlogoMobile.svg\";\r\nimport FormTextField from \"../../../components/FormTextField\";\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your Email\")\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Email is Invalid\")\r\n    .required(\"\"),\r\n  name: yup\r\n    .string(\"Enter your Name\")\r\n    .min(3, \"Name must minimum of 3 characters\")\r\n    .max(100, \"Name must be maximum of 100 characters\")\r\n    .required(\"\")\r\n    .trim(),\r\n  designation: yup\r\n    .string(\"Enter your Designation\")\r\n    .required(\"\")\r\n    .max(50, \"Designation must be maximum of 50 characters\")\r\n    .trim(),\r\n  department: yup\r\n    .string(\"Enter your Department\")\r\n    .required(\"\")\r\n    .max(50, \"Department must be maximum of 50 characters\")\r\n    .trim(),\r\n  password: yup\r\n    .string(\"Enter your Password\")\r\n    // .min(8, 'Password must be minimum of 6 characters')\r\n    // .max(12, 'Password must be maximum of 12 characters')\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/,\r\n      \"Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.\"\r\n    )\r\n    .required(\"Password is requried\")\r\n    .trim(),\r\n  termsandCondition: yup\r\n    .bool()\r\n    .oneOf([true], \"Accept Terms & Conditions is required\"),\r\n});\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n  const paramsFromUrl = useParams();\r\n\r\n  const isMobile = useMediaQuery(\"(max-width:1000px)\");\r\n  const formRef = useRef();\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    designation: \"\",\r\n    department: \"\",\r\n    password: \"\",\r\n    termsandCondition: false,\r\n  });\r\n\r\n  //checkVerificationTokenStatus\r\n  const handleVerificationToken = async () => {\r\n    dispatch(setLoading(true));\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken,\r\n      },\r\n    };\r\n    const response = await appapi.post(`/auth/verifyInviteToken`, {}, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false));\r\n      if (data.status === \"success\") {\r\n        setData((prev) => ({ ...prev, email: data.data.emailId }));\r\n      } else {\r\n        setMessage(data.message);\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false));\r\n      showmessage(`Something Went Wrong!`, \"error\", 2000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleVerificationToken();\r\n  }, []);\r\n\r\n  /**\r\n   * Register User\r\n   * @param {email,name,department, password} obj\r\n   */\r\n  const register = async (obj) => {\r\n    dispatch(setLoading(true));\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken,\r\n      },\r\n    };\r\n    let payload = {\r\n      name: obj.name,\r\n      password: obj.password,\r\n      department: obj.department,\r\n      designation: obj.designation,\r\n      deviceId: \"123\",\r\n    };\r\n    let dataObj = {};\r\n    const response = await appapi.post(`/auth/signup/invite`, payload, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false));\r\n      if (data.status === \"success\") {\r\n        // showmessage(data.message)\r\n        dataObj = { ...data.data };\r\n        let encryptedData = encrypt(JSON.stringify(data.data));\r\n        localStorage.setItem(\"diz\", encryptedData);\r\n        appapi.setHeader(\"Authorization\", `Bearer ${data.data.accessToken}`);\r\n        dispatch(login(dataObj));\r\n      } else {\r\n        showmessage(data.message, \"error\");\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false));\r\n      showmessage(`Something Went Wrong!`, \"error\", 2000);\r\n    }\r\n  };\r\n\r\n  const registerForm = () => {\r\n    return (\r\n      <>\r\n        <Typography\r\n          className=\"fw-bold ff-Roboto createHeading\"\r\n          color={colors.primaryTxt}\r\n        >\r\n          {\" \"}\r\n          Sign up{\" \"}\r\n        </Typography>\r\n        <Formik\r\n          innerRef={formRef}\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n            email: data?.email || \"\",\r\n            name: data?.name || \"\",\r\n            designation: data?.designation || \"\",\r\n            department: data?.department || \"\",\r\n            password: data?.password,\r\n            termsandCondition: data?.termsandCondition,\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => register(values)}\r\n        >\r\n          {({\r\n            handleSubmit,\r\n            values,\r\n            handleChange,\r\n            errors,\r\n            touched,\r\n            handleBlur,\r\n            isValid,\r\n            dirty,\r\n          }) => (\r\n            <Form\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              style={{ minHeight: isMobile ? \"730px\" : \"700px\" }}\r\n            >\r\n              <Stack flex={1} className=\"mt-17\">\r\n                <FormTextField\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  sx={{ mb: 0 }}\r\n                  lowerCase={true}\r\n                  disabled={values.email ? true : false}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className=\"mt-14\">\r\n                <FormTextField\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className=\"mt-14\">\r\n                <FormTextField\r\n                  label=\"Designation\"\r\n                  name=\"designation\"\r\n                  sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className=\"mt-14\">\r\n                <FormTextField\r\n                  label=\"Department\"\r\n                  name=\"department\"\r\n                  sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className=\"mt-14\">\r\n                <FormTextField\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  sx={{ mb: 0 }}\r\n                  visibility={visibility}\r\n                  setVisibility={(val) => setVisibility(val)}\r\n                />\r\n              </Stack>\r\n              <Stack className=\"mt-17 checkboxStyle\">\r\n                <FormControlLabel\r\n                  required\r\n                  control={\r\n                    <Checkbox\r\n                      sx={{\r\n                        \"&.Mui-checked\": {\r\n                          color: colors.primaryTxt,\r\n                        },\r\n                      }}\r\n                      id=\"termsandCondition\"\r\n                      name=\"termsandCondition\"\r\n                      checked={!!values.termsandCondition}\r\n                      onChange={handleChange}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <Typography className=\"fs-12 ff-Roboto fw-regular black\">\r\n                      I agree to the Terms of Service and Privacy Policy\r\n                    </Typography>\r\n                  }\r\n                />\r\n              </Stack>\r\n              <Button\r\n                sx={{ ...buttonStyle1, width: \"100%\" }}\r\n                disabled={!(dirty && isValid)}\r\n                type=\"submit\"\r\n              >\r\n                Create\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"registerComponent\"\r\n      style={{\r\n        padding: isMobile ? \"16px\" : \"0\",\r\n        minHeight: isMobile ? \"auto\" : \"100vh\",\r\n      }}\r\n    >\r\n      {isMobile ? (\r\n        <div\r\n          className=\"mobileViewContainer\"\r\n          style={{ minHeight: \"calc(100vh - 32px)\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${mobilewavybg})`,\r\n              minHeight: \"calc(100vh - 32px)\",\r\n              backgroundPosition: \"center bottom\",\r\n              backgroundRepeat: \"no-repeat\",\r\n            }}\r\n          >\r\n            <div className=\"logoImg\" style={{ marginLeft: \"8px\" }}>\r\n              <img alt=\"dizLogo\" src={dizlogoMobile} />\r\n            </div>\r\n            <div\r\n              className=\"innerContainer\"\r\n              style={{ marginTop: message ? \"140px\" : \"28px\" }}\r\n            >\r\n              {message ? (\r\n                <>\r\n                  <Stack>\r\n                    <Typography\r\n                      className=\"fw-bold ff-Roboto createHeading\"\r\n                      color={colors.primaryTxt}\r\n                    >\r\n                      {\" \"}\r\n                      Sign up{\" \"}\r\n                    </Typography>\r\n                    <Typography\r\n                      className=\"fs-12 ff-Roboto fw-regular\"\r\n                      color={colors.blackMain}\r\n                      style={{ marginBottom: \"6px\" }}\r\n                    >\r\n                      {message}\r\n                    </Typography>\r\n                  </Stack>\r\n                </>\r\n              ) : (\r\n                registerForm()\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Stack\r\n          style={{ maxWidth: \"1368px\", margin: \"auto\", minHeight: \"768px\" }}\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack className=\"leftStack\" style={{ width: \"50%\" }}>\r\n            <div className=\"logoImg\">\r\n              <img alt=\"dizLogo\" src={diztextlogo} />\r\n            </div>\r\n            <div\r\n              className=\"detailContainer\"\r\n              style={{ backgroundImage: `url(${wavesbg})` }}\r\n            >\r\n              <Stack className=\"detailsList\">{<DetailCard />}</Stack>\r\n              <Stack className=\"socialContainer\" direction=\"row\">\r\n                {<SocialCard />}\r\n              </Stack>\r\n            </div>\r\n          </Stack>\r\n          <Stack className=\"rightStack\" style={{ width: \"50%\" }}>\r\n            <div\r\n              className=\"innerContainer\"\r\n              style={{\r\n                marginTop: message ? \"22.916666666667vh\" : \"10.916667vh\",\r\n              }}\r\n            >\r\n              {message ? (\r\n                <>\r\n                  <Stack>\r\n                    <Typography\r\n                      className=\"fw-bold ff-Roboto createHeading\"\r\n                      color={colors.primaryTxt}\r\n                    >\r\n                      {\" \"}\r\n                      Sign up{\" \"}\r\n                    </Typography>\r\n                    <Typography\r\n                      className=\"fs-12 ff-Roboto fw-regular\"\r\n                      color={colors.blackMain}\r\n                      style={{ marginBottom: \"6px\" }}\r\n                    >\r\n                      {message}\r\n                    </Typography>\r\n                  </Stack>\r\n                </>\r\n              ) : (\r\n                registerForm()\r\n              )}\r\n            </div>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n      {isMobile ? (\r\n        <Stack\r\n          className=\"footer\"\r\n          alignItems=\"center\"\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack className=\"socialContainer\" direction=\"row\">\r\n            {<SocialCard />}\r\n          </Stack>\r\n          <Typography className=\"fs-10 ff-Roboto fw-medium black dizcopyrights\">\r\n            © 2022 Do It Zero Inc.\r\n          </Typography>\r\n        </Stack>\r\n      ) : (\r\n        <Typography className=\"fs-10 ff-Roboto fw-medium black dizcopyrights\">\r\n          © 2022 Do It Zero Inc.\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["validationSchema","yup","email","matches","required","name","min","max","trim","designation","department","password","termsandCondition","oneOf","Register","dispatch","useDispatch","paramsFromUrl","useParams","isMobile","useMediaQuery","formRef","useRef","useState","visibility","setVisibility","message","setMessage","data","setData","handleVerificationToken","setLoading","params","verificationToken","appapi","response","ok","status","prev","emailId","showmessage","useEffect","register","obj","payload","deviceId","dataObj","encryptedData","encrypt","JSON","stringify","localStorage","setItem","accessToken","login","registerForm","Typography","className","color","colors","innerRef","enableReinitialize","initialValues","onSubmit","values","handleSubmit","handleChange","isValid","errors","touched","handleBlur","dirty","noValidate","autoComplete","style","minHeight","Stack","flex","FormTextField","label","sx","mb","lowerCase","disabled","whiteSpace","type","val","FormControlLabel","control","Checkbox","id","checked","onChange","Button","buttonStyle1","width","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","marginLeft","alt","src","dizlogoMobile","marginTop","marginBottom","maxWidth","margin","direction","justifyContent","diztextlogo","wavesbg","DetailCard","SocialCard","alignItems"],"sourceRoot":""}