{"version":3,"file":"static/js/17.0de626e0.chunk.js","mappings":"ybAyBMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPE,QAAQ,mCAAoC,oBAC5CC,SAAS,IACZC,KAAMJ,EAAAA,GACI,mBACPK,IAAI,EAAG,qCACPC,IAAI,IAAK,0CACTH,SAAS,IACTI,OACHC,YAAaR,EAAAA,GACH,0BACPG,SAAS,IACTG,IAAI,GAAI,gDACRC,OACHE,WAAYT,EAAAA,GACF,yBACPG,SAAS,IACTG,IAAI,GAAI,+CACRC,OACHG,SAAUV,EAAAA,GACA,uBAGPE,QAAQ,yEAA0E,wHAClFC,SAAS,wBACTI,OACHI,kBAAmBX,EAAAA,KAAWY,MAAM,EAAC,GAAO,2CAG/B,SAASC,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,MAEhBC,GAAWC,EAAAA,EAAAA,GAAc,sBACzBC,GAAUC,EAAAA,EAAAA,UAEhB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,CAC/BrB,MAAO,GACPG,KAAM,GACNI,YAAa,GACbC,WAAY,GACZC,SAAU,GACVC,mBAAmB,IANrB,eAAOgB,EAAP,KAAaC,EAAb,KAUMC,EAAuB,yCAAG,oGAC9Bf,GAASgB,EAAAA,EAAAA,KAAW,IAChBC,EAAS,CACXA,OAAQ,CACNC,kBAAmBhB,EAAcgB,oBAJP,SAOPC,EAAAA,EAAAA,KAAA,0BAAuC,CAAC,EAAGF,GAPpC,QAOxBG,EAPwB,QAQjBC,IACLR,EAAOO,EAASP,KACtBb,GAASgB,EAAAA,EAAAA,KAAW,IACA,YAAhBH,EAAKS,OACPR,GAAQ,SAAAS,GAAI,yBAAUA,GAAV,IAAgBpC,MAAO0B,EAAKA,KAAKW,SAAjC,IAEZZ,EAAWC,EAAKF,WAGlBX,GAASgB,EAAAA,EAAAA,KAAW,KACpBS,EAAAA,EAAAA,GAAY,wBAAyB,QAAS,MAlBlB,2CAAH,sDAsB7BC,EAAAA,EAAAA,YAAU,WACRX,GACD,GAAE,IAMH,IAAMY,EAAQ,yCAAG,WAAOC,GAAP,6FACf5B,GAASgB,EAAAA,EAAAA,KAAW,IAChBC,EAAS,CACXA,OAAQ,CACNC,kBAAmBhB,EAAcgB,oBAGjCW,EAAU,CACZvC,KAAMsC,EAAItC,KACVM,SAAUgC,EAAIhC,SACdD,WAAYiC,EAAIjC,WAChBD,YAAakC,EAAIlC,YACjBoC,SAAU,OAERC,EAAU,CAAC,EAdA,SAeQZ,EAAAA,EAAAA,KAAA,sBAAmCU,EAASZ,GAfpD,QAeTG,EAfS,QAgBFC,IACLR,EAAOO,EAASP,KACtBb,GAASgB,EAAAA,EAAAA,KAAW,IACA,YAAhBH,EAAKS,QAEPS,GAAO,UAAQlB,EAAKA,MAChBmB,GAAgBC,EAAAA,EAAAA,GAAQC,KAAKC,UAAUtB,EAAKA,OAChDuB,aAAaC,QAAQ,MAAOL,GAC5Bb,EAAAA,EAAAA,UAAiB,gBAAjB,iBAA4CN,EAAKA,KAAKyB,cACtDtC,GAASuC,EAAAA,EAAAA,IAAMR,MAEfN,EAAAA,EAAAA,GAAYZ,EAAKF,QAAS,WAG5BX,GAASgB,EAAAA,EAAAA,KAAW,KACpBS,EAAAA,EAAAA,GAAY,wBAAyB,QAAS,MA/BjC,2CAAH,sDAmCRe,EAAe,WACnB,OACE,iCACE,SAACC,EAAA,EAAD,CAAYC,UAAU,kCAAkCC,MAAOC,EAAAA,EAAAA,WAA/D,wBACA,SAAC,KAAD,CACEC,SAAUvC,EACVwC,oBAAoB,EACpBC,cAAe,CACb5D,OAAW,OAAJ0B,QAAI,IAAJA,OAAA,EAAAA,EAAM1B,QAAS,GACtBG,MAAU,OAAJuB,QAAI,IAAJA,OAAA,EAAAA,EAAMvB,OAAQ,GACpBI,aAAiB,OAAJmB,QAAI,IAAJA,OAAA,EAAAA,EAAMnB,cAAe,GAClCC,YAAgB,OAAJkB,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,aAAc,GAChCC,SAAQ,OAAEiB,QAAF,IAAEA,OAAF,EAAEA,EAAMjB,SAChBC,kBAAiB,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAMhB,mBAE3BZ,iBAAkBA,EAClB+D,SAAU,SAACC,GAAD,OAAYtB,EAASsB,EAArB,EAZZ,SAcG,cAAGC,aAAH,IAAiBD,EAAjB,EAAiBA,OAAQE,EAAzB,EAAyBA,aAA2CC,GAApE,EAAuCC,OAAvC,EAA+CC,QAA/C,EAAwDC,WAAxD,EAAoEH,SAASI,EAA7E,EAA6EA,MAA7E,OACC,UAAC,KAAD,CAAMC,YAAU,EAACC,aAAa,MAAMC,MAAO,CAAEC,UAAWxD,EAAW,QAAU,SAA7E,WACE,SAACyD,EAAA,EAAD,CAAOC,KAAM,EAAGpB,UAAU,QAA1B,UACE,SAACqB,EAAA,EAAD,CAAeC,MAAM,QAAQ1E,KAAK,QAAQ2E,GAAI,CAAEC,GAAI,GAClDC,WAAW,EAAMC,WAAUnB,EAAO9D,WAGtC,SAAC0E,EAAA,EAAD,CAAOC,KAAM,EAAGpB,UAAU,QAA1B,UACE,SAACqB,EAAA,EAAD,CAAeC,MAAM,OAAO1E,KAAK,OAAO2E,GAAI,CAAEC,GAAI,GAChDG,YAAY,OAGhB,SAACR,EAAA,EAAD,CAAOC,KAAM,EAAGpB,UAAU,QAA1B,UACE,SAACqB,EAAA,EAAD,CAAeC,MAAM,cAAc1E,KAAK,cAAc2E,GAAI,CAAEC,GAAI,GAC9DG,YAAY,OAGhB,SAACR,EAAA,EAAD,CAAOC,KAAM,EAAGpB,UAAU,QAA1B,UACE,SAACqB,EAAA,EAAD,CAAeC,MAAM,aAAa1E,KAAK,aAAa2E,GAAI,CAAEC,GAAI,GAC5DG,YAAY,OAGhB,SAACR,EAAA,EAAD,CAAOC,KAAM,EAAGpB,UAAU,QAA1B,UACE,SAACqB,EAAA,EAAD,CAAeC,MAAM,WAAW1E,KAAK,WAAWgF,KAAK,WAAWL,GAAI,CAAEC,GAAI,GACxEzD,WAAYA,EACZC,cAAe,SAAC6D,GAAD,OAAS7D,EAAc6D,EAAvB,OAGnB,SAACV,EAAA,EAAD,CAAOnB,UAAU,sBAAjB,UACE,SAAC8B,EAAA,EAAD,CACEnF,UAAQ,EACRoF,SACE,SAACC,EAAA,EAAD,CACET,GAAI,CACF,gBAAiB,CACftB,MAAOC,EAAAA,EAAAA,aAGX+B,GAAG,oBACHrF,KAAK,oBACLsF,UAAW3B,EAAOpD,kBAClBgF,SAAU1B,IAEda,OAAO,SAACvB,EAAA,EAAD,CAAYC,UAAU,mCAAtB,qEAGX,SAACoC,EAAA,EAAD,CAAQb,IAAE,kBAAOc,EAAAA,IAAP,IAAqBC,MAAO,SAAUZ,WAAYZ,GAASJ,GAAUkB,KAAK,SAApF,sBA9CH,MAoDR,EAED,OACE,iBAAK5B,UAAU,oBAAoBiB,MAAO,CAAEsB,QAAS7E,EAAW,OAAS,IAAKwD,UAAWxD,EAAW,OAAS,SAA7G,UAEIA,GACE,gBAAKsC,UAAU,sBAAsBiB,MAAO,CAAEC,UAAW,sBAAzD,UACE,iBAAKD,MAAO,CAAEuB,gBAAgB,OAAD,OAASC,EAAAA,EAAT,KAA0BvB,UAAW,qBAAsBwB,mBAAoB,gBAAiBC,iBAAkB,aAA/I,WACE,gBAAK3C,UAAU,UAAUiB,MAAO,CAAE2B,WAAY,OAA9C,UACE,gBAAKC,IAAI,UAAUC,IAAKC,EAAAA,OAE1B,gBAAK/C,UAAU,iBAAiBiB,MAAO,CAAE+B,UAAW/E,EAAU,QAAU,QAAxE,SAEGA,GACC,+BACE,UAACkD,EAAA,EAAD,YACE,SAACpB,EAAA,EAAD,CAAYC,UAAU,kCAAkCC,MAAOC,EAAAA,EAAAA,WAA/D,wBACA,SAACH,EAAA,EAAD,CAAYC,UAAU,6BAA6BC,MAAOC,EAAAA,EAAAA,UAAkBe,MAAO,CAAEgC,aAAc,OAAnG,SACGhF,SAKP6B,YAKR,UAACqB,EAAA,EAAD,CAAOF,MAAO,CAAEiC,SAAU,SAAUC,OAAQ,OAAQjC,UAAW,SAAWkC,UAAU,MAAMC,eAAe,gBAAzG,WACE,UAAClC,EAAA,EAAD,CAAOnB,UAAU,YAAYiB,MAAO,CAAEqB,MAAO,OAA7C,WACE,gBAAKtC,UAAU,UAAf,UACE,gBAAK6C,IAAI,UAAUC,IAAKQ,EAAAA,OAE1B,iBAAKtD,UAAU,kBAAkBiB,MAAO,CAAEuB,gBAAgB,OAAD,OAASe,EAAAA,EAAT,MAAzD,WACE,SAACpC,EAAA,EAAD,CAAOnB,UAAU,cAAjB,UAEI,SAACwD,EAAA,EAAD,OAGJ,SAACrC,EAAA,EAAD,CAAOnB,UAAU,kBAAkBoD,UAAU,MAA7C,UAEI,SAACK,EAAA,EAAD,aAKR,SAACtC,EAAA,EAAD,CAAOnB,UAAU,aAAaiB,MAAO,CAAEqB,MAAO,OAA9C,UACE,gBAAKtC,UAAU,iBAAiBiB,MAAO,CAAE+B,UAAW/E,EAAU,oBAAsB,eAApF,SACGA,GACC,+BACE,UAACkD,EAAA,EAAD,YACE,SAACpB,EAAA,EAAD,CAAYC,UAAU,kCAAkCC,MAAOC,EAAAA,EAAAA,WAA/D,wBACA,SAACH,EAAA,EAAD,CAAYC,UAAU,6BAA6BC,MAAOC,EAAAA,EAAAA,UAAkBe,MAAO,CAAEgC,aAAc,OAAnG,SACGhF,SAKP6B,WAOVpC,GACE,UAACyD,EAAA,EAAD,CAAOnB,UAAU,SAAS0D,WAAW,SAASN,UAAU,MAAMC,eAAe,gBAA7E,WACE,SAAClC,EAAA,EAAD,CAAOnB,UAAU,kBAAkBoD,UAAU,MAA7C,UAEI,SAACK,EAAA,EAAD,OAGJ,SAAC1D,EAAA,EAAD,CAAYC,UAAU,gDAAtB,2CAGF,SAACD,EAAA,EAAD,CAAYC,UAAU,gDAAtB,yCAIT,C","sources":["pages/Auth/register/Register.js"],"sourcesContent":["import './Register.scss';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport * as yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport { Button, Stack, useMediaQuery, Typography, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { showmessage } from '../../../utils/toastr';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../../redux/features/authSlice';\r\nimport { useParams } from 'react-router-dom'\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { encrypt } from '../../../utils/Crpyto';\r\nimport { colors } from '../../../utils/colors';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg'\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport SocialCard from '../../../components/SocialCard';\r\nimport DetailCard from '../../../components/DetailCard';\r\nimport dizlogoMobile from '../../../assets/images/dizlogoMobile.svg';\r\nimport FormTextField from '../../../components/FormTextField';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your Email')\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n    .required(''),\r\n  name: yup\r\n    .string('Enter your Name')\r\n    .min(3, 'Name must minimum of 3 characters')\r\n    .max(100, 'Name must be maximum of 100 characters')\r\n    .required('')\r\n    .trim(),\r\n  designation: yup\r\n    .string('Enter your Designation')\r\n    .required('')\r\n    .max(50, 'Designation must be maximum of 50 characters')\r\n    .trim(),\r\n  department: yup\r\n    .string('Enter your Department')\r\n    .required('')\r\n    .max(50, 'Department must be maximum of 50 characters')\r\n    .trim(),\r\n  password: yup\r\n    .string('Enter your Password')\r\n    // .min(8, 'Password must be minimum of 6 characters')\r\n    // .max(12, 'Password must be maximum of 12 characters')\r\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/, 'Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n    .required('Password is requried')\r\n    .trim(),\r\n  termsandCondition: yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\r\n})\r\n\r\nexport default function Register() {\r\n\r\n  const dispatch = useDispatch()\r\n  const paramsFromUrl = useParams()\r\n\r\n  const isMobile = useMediaQuery('(max-width:1000px)');\r\n  const formRef = useRef();\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    name: '',\r\n    designation: '',\r\n    department: '',\r\n    password: '',\r\n    termsandCondition: false\r\n  })\r\n\r\n  //checkVerificationTokenStatus \r\n  const handleVerificationToken = async () => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    const response = await appapi.post(`/auth/verifyInviteToken`, {}, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        setData(prev => ({ ...prev, email: data.data.emailId }))\r\n      } else {\r\n        setMessage(data.message)\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 'error', 2000)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleVerificationToken()\r\n  }, []);\r\n\r\n  /**\r\n   * Register User\r\n   * @param {email,name,department, password} obj \r\n   */\r\n  const register = async (obj) => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    let payload = {\r\n      name: obj.name,\r\n      password: obj.password,\r\n      department: obj.department,\r\n      designation: obj.designation,\r\n      deviceId: '123'\r\n    }\r\n    let dataObj = {}\r\n    const response = await appapi.post(`/auth/signup/invite`, payload, params)\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        // showmessage(data.message)\r\n        dataObj = { ...data.data }\r\n        let encryptedData = encrypt(JSON.stringify(data.data))\r\n        localStorage.setItem('diz', encryptedData)\r\n        appapi.setHeader('Authorization', `Bearer ${data.data.accessToken}`);\r\n        dispatch(login(dataObj))\r\n      } else {\r\n        showmessage(data.message, 'error')\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 'error', 2000)\r\n    }\r\n  }\r\n\r\n  const registerForm = () => {\r\n    return (\r\n      <>\r\n        <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n        <Formik\r\n          innerRef={formRef}\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n            email: data?.email || '',\r\n            name: data?.name || '',\r\n            designation: data?.designation || '',\r\n            department: data?.department || '',\r\n            password: data?.password,\r\n            termsandCondition: data?.termsandCondition\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => register(values)}\r\n        >\r\n          {({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => (\r\n            <Form noValidate autoComplete=\"off\" style={{ minHeight: isMobile ? '730px' : '700px' }}>\r\n              <Stack flex={1} className='mt-17'>\r\n                <FormTextField label=\"Email\" name=\"email\" sx={{ mb: 0 }}\r\n                  lowerCase={true} disabled={values.email ? true : false}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className='mt-14'>\r\n                <FormTextField label=\"Name\" name=\"name\" sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className='mt-14'>\r\n                <FormTextField label=\"Designation\" name=\"designation\" sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className='mt-14'>\r\n                <FormTextField label=\"Department\" name=\"department\" sx={{ mb: 0 }}\r\n                  whiteSpace={true}\r\n                />\r\n              </Stack>\r\n              <Stack flex={1} className='mt-14'>\r\n                <FormTextField label=\"Password\" name=\"password\" type='password' sx={{ mb: 0 }}\r\n                  visibility={visibility}\r\n                  setVisibility={(val) => setVisibility(val)}\r\n                />\r\n              </Stack>\r\n              <Stack className='mt-17 checkboxStyle'>\r\n                <FormControlLabel\r\n                  required\r\n                  control={\r\n                    <Checkbox\r\n                      sx={{\r\n                        '&.Mui-checked': {\r\n                          color: colors.primaryTxt,\r\n                        },\r\n                      }}\r\n                      id='termsandCondition'\r\n                      name='termsandCondition'\r\n                      checked={!!values.termsandCondition}\r\n                      onChange={handleChange} />\r\n                  }\r\n                  label={<Typography className='fs-12 ff-Roboto fw-regular black'>I agree to the Terms of Service and Privacy Policy</Typography>}\r\n                />\r\n              </Stack>\r\n              <Button sx={{ ...buttonStyle1, width: '100%' }} disabled={!(dirty && isValid)} type='submit'>Create</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='registerComponent' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n      {\r\n        isMobile ?\r\n          <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n            <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n              <div className='logoImg' style={{ marginLeft: '8px' }}>\r\n                <img alt='dizLogo' src={dizlogoMobile} />\r\n              </div>\r\n              <div className='innerContainer' style={{ marginTop: message ? '140px' : '28px' }}>\r\n\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '768px' }} direction='row' justifyContent='space-between'>\r\n            <Stack className='leftStack' style={{ width: '50%' }}>\r\n              <div className='logoImg'>\r\n                <img alt='dizLogo' src={diztextlogo} />\r\n              </div>\r\n              <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                <Stack className='detailsList'>\r\n                  {\r\n                    <DetailCard />\r\n                  }\r\n                </Stack>\r\n                <Stack className='socialContainer' direction='row'>\r\n                  {\r\n                    <SocialCard />\r\n                  }\r\n                </Stack>\r\n              </div>\r\n            </Stack>\r\n            <Stack className='rightStack' style={{ width: '50%' }}>\r\n              <div className='innerContainer' style={{ marginTop: message ? '22.916666666667vh' : '10.916667vh' }}>\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm()\r\n                }\r\n              </div>\r\n            </Stack>\r\n          </Stack>\r\n      }\r\n      {\r\n        isMobile ?\r\n          <Stack className='footer' alignItems='center' direction='row' justifyContent='space-between'>\r\n            <Stack className='socialContainer' direction='row'>\r\n              {\r\n                <SocialCard />\r\n              }\r\n            </Stack>\r\n            <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do It Zero Inc.</Typography>\r\n          </Stack>\r\n          :\r\n          <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do It Zero Inc.</Typography>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"],"names":["validationSchema","yup","email","matches","required","name","min","max","trim","designation","department","password","termsandCondition","oneOf","Register","dispatch","useDispatch","paramsFromUrl","useParams","isMobile","useMediaQuery","formRef","useRef","useState","visibility","setVisibility","message","setMessage","data","setData","handleVerificationToken","setLoading","params","verificationToken","appapi","response","ok","status","prev","emailId","showmessage","useEffect","register","obj","payload","deviceId","dataObj","encryptedData","encrypt","JSON","stringify","localStorage","setItem","accessToken","login","registerForm","Typography","className","color","colors","innerRef","enableReinitialize","initialValues","onSubmit","values","handleSubmit","handleChange","isValid","errors","touched","handleBlur","dirty","noValidate","autoComplete","style","minHeight","Stack","flex","FormTextField","label","sx","mb","lowerCase","disabled","whiteSpace","type","val","FormControlLabel","control","Checkbox","id","checked","onChange","Button","buttonStyle1","width","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","marginLeft","alt","src","dizlogoMobile","marginTop","marginBottom","maxWidth","margin","direction","justifyContent","diztextlogo","wavesbg","DetailCard","SocialCard","alignItems"],"sourceRoot":""}