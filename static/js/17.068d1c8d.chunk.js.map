{"version":3,"file":"static/js/17.068d1c8d.chunk.js","mappings":"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","sources":["pages/Auth/register/Register.js"],"sourcesContent":["import './Register.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { TextField, Button, Stack, InputAdornment, IconButton, useMediaQuery, Typography, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { showmessage } from '../../../utils/toastr';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../../redux/features/authSlice';\r\nimport { useParams } from 'react-router-dom'\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { encrypt } from '../../../utils/Crpyto';\r\nimport { colors } from '../../../utils/colors';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg'\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport SocialCard from '../../../components/SocialCard';\r\nimport DetailCard from '../../../components/DetailCard';\r\nimport dizlogoMobile from '../../../assets/images/dizlogoMobile.svg';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your Email')\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n    .required(''),\r\n  name: yup\r\n    .string('Enter your Name')\r\n    .min(3, 'Name must minimum of 3 characters')\r\n    .max(100, 'Name must maximum of 100 characters')\r\n    .required('')\r\n    .trim(),\r\n  designation: yup\r\n    .string('Enter your Department')\r\n    .required('')\r\n    .max(50, 'Designation must maximum of 50 characters')\r\n    .trim(),\r\n  department: yup\r\n    .string('Enter your Department')\r\n    .required('')\r\n    .max(50, 'Department must maximum of 50 characters')\r\n    .trim(),\r\n  password: yup\r\n    .string('Enter your Password')\r\n    // .min(8, 'Password must be minimum of 6 characters')\r\n    // .max(12, 'Password must be maximum of 12 characters')\r\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/, 'Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n    .required('Password is requried')\r\n    .trim(),\r\n  termsandCondition: yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\r\n})\r\n\r\nexport default function Register() {\r\n\r\n  const dispatch = useDispatch()\r\n  const paramsFromUrl = useParams()\r\n\r\n  const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    name: '',\r\n    designation: '',\r\n    department: '',\r\n    password: '',\r\n    termsandCondition: false\r\n  })\r\n\r\n  const [showErrorName, setShowErrorName] = useState(undefined);\r\n  const [showErrorDepartment, setShowErrorDepartment] = useState(undefined);\r\n  const [showErrorDesignation, setShowErrorDesignation] = useState(undefined);\r\n  const [showErrorPassword, setShowErrorPassword] = useState(undefined)\r\n\r\n  //checkVerificationTokenStatus \r\n  const handleVerificationToken = async () => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    const response = await appapi.post(`/auth/verifyInviteToken`, {}, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        setData(prev => ({ ...prev, email: data.data.emailId }))\r\n      } else {\r\n        setMessage(data.message)\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 3000, 'error')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleVerificationToken()\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: data,\r\n    validationSchema: validationSchema,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    onSubmit: (values) => {\r\n      register(values)\r\n    },\r\n  })\r\n\r\n  /**\r\n   * Register User\r\n   * @param {email,name,department, password} obj \r\n   */\r\n  const register = async (obj) => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    let payload = {\r\n      name: obj.name,\r\n      password: obj.password,\r\n      department: obj.department,\r\n      designation: obj.designation,\r\n      deviceId: '123'\r\n    }\r\n    let dataObj = {}\r\n    const response = await appapi.post(`/auth/signup/invite`, payload, params)\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        showmessage(data.message)\r\n        dataObj = { ...data.data }\r\n        let encryptedData = encrypt(JSON.stringify(data.data))\r\n        localStorage.setItem('diz', encryptedData)\r\n        appapi.setHeader('Authorization', `Bearer ${data.data.accessToken}`);\r\n        dispatch(login(dataObj))\r\n      } else {\r\n        showmessage(data.message, 5000, 'error')\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 3000, 'error')\r\n    }\r\n  }\r\n\r\n  const registerForm = ({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => {\r\n    return (\r\n      <>\r\n        <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n        <form onSubmit={handleSubmit} style={{ minHeight: isMobile ? '730px' : '700px' }}>\r\n          <Stack>\r\n            <Stack className='mt-17'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Email</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='email'\r\n                name='email'\r\n                value={values?.email?.toLowerCase().replace(/^\\s/g, '') || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={(touched.email || dirty.email) && errors.email}\r\n                disabled={values.email ? true : false}\r\n                InputProps={{\r\n                  classes: {\r\n                    disabled: 'disabled'\r\n                  }\r\n                }}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Name</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='name'\r\n                name='name'\r\n                value={values?.name?.replace(/^\\s/g, '') || ''}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setShowErrorName(undefined)\r\n                  }\r\n                  handleChange(e);\r\n                }}\r\n                onBlur={(e) => {\r\n                  if (Boolean(errors.name)) {\r\n                    setShowErrorName(errors.name)\r\n                  } else {\r\n                    setShowErrorName(undefined)\r\n                  }\r\n                  handleBlur(e);\r\n                }}\r\n                // error={touched.name && Boolean(errors.name)}\r\n                helperText={(touched.name) && showErrorName}\r\n                autoComplete='off'\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Designation</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='designation'\r\n                name='designation'\r\n                value={values?.designation?.replace(/^\\s/g, '') || ''}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setShowErrorDesignation(undefined)\r\n                  }\r\n                  handleChange(e);\r\n                }}\r\n                onBlur={(e) => {\r\n                  if (Boolean(errors.designation)) {\r\n                    setShowErrorDesignation(errors.designation)\r\n                  } else {\r\n                    setShowErrorDesignation(undefined)\r\n                  }\r\n                  handleBlur(e);\r\n                }}\r\n                helperText={(touched.designation) && showErrorDesignation}\r\n                autoComplete='off'\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Department</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='department'\r\n                name='department'\r\n                value={values?.department?.replace(/^\\s/g, '') || ''}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setShowErrorDepartment(undefined)\r\n                  }\r\n                  handleChange(e);\r\n                }}\r\n                onBlur={(e) => {\r\n                  if (Boolean(errors.department)) {\r\n                    setShowErrorDepartment(errors.department)\r\n                  } else {\r\n                    setShowErrorDepartment(undefined)\r\n                  }\r\n                  handleBlur(e);\r\n                }}\r\n                helperText={(touched.department) && showErrorDepartment}\r\n                autoComplete='off'\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14 passwordField'>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Password</Typography>\r\n              </div>\r\n              <TextField\r\n                fullWidth\r\n                id='password'\r\n                name='password'\r\n                value={values?.password?.trim() || ''}\r\n                onChange={(e) => {\r\n                  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/;\r\n                  let flag = regex.test(e.target.value);\r\n                  if (e.target.value && !flag) {\r\n                    setShowErrorPassword('Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n                  } else {\r\n                    setShowErrorPassword('')\r\n                  }\r\n                  handleChange(e);\r\n                }}\r\n                onBlur={handleBlur}\r\n                type={visibility ? 'text' : 'password'}\r\n                // error={touched.password && Boolean(errors.password)}\r\n                helperText={(touched.password) && showErrorPassword}\r\n                className={values.password ? 'helperTextStyleblack' : 'helperTextStylered'}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position='end'>\r\n                      {\r\n                        <IconButton onClick={() => setVisibility(!visibility)}>\r\n                          {visibility ? <VisibilityOutlinedIcon /> : <VisibilityOffOutlinedIcon />}\r\n                        </IconButton>\r\n                      }\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-17 checkboxStyle'>\r\n              <FormControlLabel\r\n                required\r\n                control={\r\n                  <Checkbox\r\n                    sx={{\r\n                      '&.Mui-checked': {\r\n                        color: colors.primaryTxt,\r\n                      },\r\n                    }}\r\n                    id='termsandCondition'\r\n                    name='termsandCondition'\r\n                    checked={!!values.termsandCondition}\r\n                    onChange={handleChange} />\r\n                }\r\n                label={<Typography className='fs-12 ff-Roboto fw-regular black'>I agree to the Terms of Service and Privacy Policy</Typography>}\r\n              />\r\n            </Stack>\r\n            <Button sx={buttonStyle1} disabled={!(dirty && isValid)} type='submit'>Create</Button>\r\n          </Stack>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='registerComponent' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n      {\r\n        isMobile ?\r\n          <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n            <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n              <div className='logoImg' style={{ marginLeft: '8px' }}>\r\n                <img alt='dizLogo' src={dizlogoMobile} />\r\n              </div>\r\n              <div className='innerContainer' style={{ marginTop: message ? '140px' : '28px' }}>\r\n\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm({ ...formik })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '768px' }} direction='row' justifyContent='space-between'>\r\n            <Stack className='leftStack' style={{ width: '50%' }}>\r\n              <div className='logoImg'>\r\n                <img alt='dizLogo' src={diztextlogo} />\r\n              </div>\r\n              <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                <Stack className='detailsList'>\r\n                  {\r\n                    <DetailCard />\r\n                  }\r\n                </Stack>\r\n                <Stack className='socialContainer' direction='row'>\r\n                  {\r\n                    <SocialCard />\r\n                  }\r\n                </Stack>\r\n              </div>\r\n            </Stack>\r\n            <Stack className='rightStack' style={{ width: '50%' }}>\r\n              <div className='innerContainer' style={{ marginTop: message ? '22.916666666667vh' : '10.916667vh' }}>\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm({ ...formik })\r\n                }\r\n              </div>\r\n            </Stack>\r\n          </Stack>\r\n      }\r\n      {\r\n        isMobile ?\r\n          <Stack className='footer' alignItems='center' direction='row' justifyContent='space-between'>\r\n            <Stack className='socialContainer' direction='row'>\r\n              {\r\n                <SocialCard />\r\n              }\r\n            </Stack>\r\n            <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n          </Stack>\r\n          :\r\n          <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"],"names":["validationSchema","yup","email","matches","required","name","min","max","trim","designation","department","password","termsandCondition","oneOf","Register","dispatch","useDispatch","paramsFromUrl","useParams","isMobile","useMediaQuery","useState","visibility","setVisibility","message","setMessage","data","setData","undefined","showErrorName","setShowErrorName","showErrorDepartment","setShowErrorDepartment","showErrorDesignation","setShowErrorDesignation","showErrorPassword","setShowErrorPassword","handleVerificationToken","setLoading","params","verificationToken","appapi","response","ok","status","prev","emailId","showmessage","useEffect","formik","useFormik","enableReinitialize","initialValues","validateOnBlur","validateOnChange","onSubmit","values","register","obj","payload","deviceId","dataObj","encryptedData","encrypt","JSON","stringify","localStorage","setItem","accessToken","login","registerForm","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","Typography","className","color","colors","style","minHeight","Stack","TextField","fullWidth","id","value","toLowerCase","replace","onChange","onBlur","error","Boolean","helperText","disabled","InputProps","classes","e","target","autoComplete","display","justifyContent","alignItems","flag","test","type","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOutlined","VisibilityOffOutlined","FormControlLabel","control","Checkbox","sx","checked","label","Button","buttonStyle1","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","marginLeft","alt","src","dizlogoMobile","marginTop","marginBottom","maxWidth","margin","direction","width","diztextlogo","wavesbg","DetailCard","SocialCard"],"sourceRoot":""}