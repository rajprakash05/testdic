{"version":3,"file":"static/js/347.c4d5e3d4.chunk.js","mappings":"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","sources":["pages/Auth/login/Login.js","../node_modules/@mui/icons-material/VisibilityOffOutlined.js"],"sourcesContent":["import './Login.scss';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { TextField, Button, Stack, InputAdornment, IconButton, Typography, useMediaQuery } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { showmessage } from '../../../utils/toastr'\r\nimport { login } from '../../../redux/features/authSlice';\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { encrypt } from '../../../utils/Crpyto';\r\nimport { colors } from '../../../utils/colors';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg';\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\nimport SocialCard from '../../../components/SocialCard';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your Email')\r\n        .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n        .required('Email is Required')\r\n        .trim(),\r\n    password: yup\r\n        .string('Enter your Password')\r\n        .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/, 'Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n        .required('Password is requried')\r\n        .trim(),\r\n})\r\n\r\nexport default function Login() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const navigate = useNavigate();\r\n    const [visibility, setVisibility] = useState(false);\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: data,\r\n        validationSchema: validationSchema,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        onSubmit: (values) => {\r\n            Login(values)\r\n        },\r\n    })\r\n\r\n    /**\r\n     * @param {email, password} obj \r\n     * Login user\r\n     */\r\n    const Login = async (obj) => {\r\n        dispatch(setLoading(true))\r\n        let payload = {\r\n            emailId: obj.email,\r\n            password: obj.password,\r\n            deviceId: '123'\r\n        }\r\n        let dataObj = {}\r\n        const response = await appapi.post('/auth/login', payload)\r\n        if (response.ok) {\r\n            dispatch(setLoading(false))\r\n            const data = response.data;\r\n            if (data.status === 'success') {\r\n                showmessage(data.message)\r\n                dataObj = { ...data.data }\r\n                let encryptedData = encrypt(JSON.stringify(data.data))\r\n                localStorage.setItem('diz', encryptedData)\r\n                appapi.setHeader('Authorization', `Bearer ${data.data.accessToken}`);\r\n                dispatch(login(dataObj))\r\n            } else {\r\n                showmessage(data.message, 5000, 'error')\r\n            }\r\n        } else {\r\n            dispatch(setLoading(false))\r\n            showmessage(`Something Went Wrong!`, 5000, 'error')\r\n        }\r\n        // window.grecaptcha.ready(() => {\r\n        //     window.grecaptcha.execute('6LcITGEiAAAAADGUUGlHBNPQORmedLAhyeel4mSJ', { action: 'submit' }).then(async (token) => {\r\n\r\n        //     });\r\n        // });\r\n    }\r\n\r\n    const handleSignUpNavigate = () => {\r\n        navigate('/signup')\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns redirect to forgotPassword Page\r\n     */\r\n    const onClickForgotPassword = () => navigate(`/forgotPassword`)\r\n\r\n    const loginForm = ({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => {\r\n        return (\r\n            <>\r\n                <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Login </Typography>\r\n                <form style={{ minHeight: '484px' }} onSubmit={handleSubmit}>\r\n                    <Stack>\r\n                        <Stack className='mt-9'>\r\n                            <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Email</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='email'\r\n                                name='email'\r\n                                value={values.email.toLowerCase().trim() || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                helperText={(touched.email || dirty.email) && errors.email}\r\n                            />\r\n                        </Stack>\r\n                        <Stack className='mt-14 passwordField'>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Password</Typography>\r\n                                <Typography style={{ cursor: 'pointer' }} onClick={onClickForgotPassword} className='fs-14 ff-Roboto fw-regular mb-7' color={'rgb(6, 29, 48, 0.5)'}>Forgot Password?</Typography>\r\n                            </div>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='password'\r\n                                name='password'\r\n                                value={values.password.trim() || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                type={visibility ? 'text' : 'password'}\r\n                                error={touched.password && Boolean(errors.password)}\r\n                                className={values.password ? 'helperTextStyleblack' : 'helperTextStylered'}\r\n                                helperText={(touched.password || dirty.password) && errors.password}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position='end'>\r\n                                            {\r\n                                                <IconButton onClick={() => setVisibility(!visibility)}>\r\n                                                    {visibility ? <VisibilityOutlinedIcon /> : <VisibilityOffOutlinedIcon />}\r\n                                                </IconButton>\r\n                                            }\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Stack>\r\n                        <Button sx={{ ...buttonStyle1, marginBottom: '0' }} disabled={!(dirty && isValid)} type='submit'>Login</Button>\r\n                        <Stack direction='row' className='mt-16' justifyContent='center'>\r\n                            <Typography className='ff-OpenSans fw-regular fs-12' color={colors.gray}>Don't have an account </Typography>\r\n                            <Typography onClick={handleSignUpNavigate} className='ff-OpenSans fw-bold fs-12' color={colors.primaryDark} style={{ marginLeft: '11px', cursor: 'pointer' }}>Sign up</Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='loginContainer' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n            {\r\n                isMobile ?\r\n                    <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n                        <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n                            <div className='logoImg'>\r\n                                <img alt='dizLogo' src={diztextlogo} />\r\n                            </div>\r\n                            <div className='innerContainer' style={{ marginTop: '160px' }}>\r\n                                {loginForm({ ...formik })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '758.64px' }} direction='row' justifyContent='space-between'>\r\n                        <Stack className='leftStack' style={{ width: '100%' }}>\r\n                            <div className='logoImg'>\r\n                                <img style={{ visibility: 'hidden' }} alt='dizLogo' src={diztextlogo} />\r\n                            </div>\r\n                            <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                            </div>\r\n                            <Stack className='formSubmittedStyle'>\r\n                                <div className='logoImg'>\r\n                                    <img alt='dizLogo' src={diztextlogo} />\r\n                                </div>\r\n                                <div style={{ marginTop: '13.541666666667vh' }}>\r\n                                    {loginForm({ ...formik })}\r\n                                </div>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Stack>\r\n            }\r\n            {\r\n                isMobile ?\r\n                    <Stack className='footer' direction='row' justifyContent='space-between'>\r\n                        <Stack className='socialContainer' direction='row'>\r\n                            {\r\n                                <SocialCard />\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n                    </Stack>\r\n                    :\r\n                    <Stack className='footerWeb'>\r\n                        <Stack className='socialContainer flex-justifycenter' style={{\r\n                            margin: '3.125vh auto 3.125vh'\r\n                        }} direction='row'>\r\n                            {\r\n                                <SocialCard />\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n                    </Stack>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6zm-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14zM2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45 2.01 3.87zm7.5 7.5 2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13zm-3.4-3.4 1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53z\"\n}), 'VisibilityOffOutlined');\n\nexports.default = _default;"],"names":["validationSchema","yup","email","matches","required","trim","password","Login","dispatch","useDispatch","isMobile","useMediaQuery","navigate","useNavigate","useState","visibility","setVisibility","data","formik","useFormik","enableReinitialize","initialValues","validateOnBlur","validateOnChange","onSubmit","values","obj","setLoading","payload","emailId","deviceId","dataObj","appapi","response","ok","status","showmessage","message","encryptedData","encrypt","JSON","stringify","localStorage","setItem","accessToken","login","handleSignUpNavigate","onClickForgotPassword","loginForm","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","Typography","className","color","colors","style","minHeight","Stack","TextField","fullWidth","id","name","value","toLowerCase","onChange","onBlur","error","Boolean","helperText","display","justifyContent","alignItems","cursor","onClick","type","InputProps","endAdornment","InputAdornment","position","IconButton","VisibilityOutlined","VisibilityOffOutlined","Button","sx","buttonStyle1","marginBottom","disabled","direction","marginLeft","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","alt","src","diztextlogo","marginTop","maxWidth","margin","width","wavesbg","SocialCard","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}