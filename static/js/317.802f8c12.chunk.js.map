{"version":3,"file":"static/js/317.802f8c12.chunk.js","mappings":"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","sources":["components/EnchanedTableHeader.js","components/HorizontalScroll/HorizontalScroll.js","components/HorizontalScroll/useDrag.js","components/TablePaginationActions.js","pages/Layout/Analytics/components/AnalyticsHeader/AnalyticsHeader.js","pages/Layout/Analytics/components/EcoAnalyticsCard/EcoAnalyticsCard.js","pages/Layout/Analytics/components/Chart/LineChart.js","pages/Layout/Analytics/components/Chart/BarChart.js","pages/Layout/Analytics/components/AnalyticsChart/AnalyticsChart.js","pages/Layout/Analytics/components/CampaignSection/CampaignTable.js","pages/Layout/Analytics/components/CampaignSection/CampaignCard.js","pages/Layout/Analytics/components/CampaignSection/CampaignSection.js","pages/Layout/Analytics/components/ReportSection/ReportTable.js","pages/Layout/Analytics/components/ReportSection/ReportCard.js","pages/Layout/Analytics/components/ReportSection/ReportSection.js","pages/Layout/Analytics/Analytics.js"],"sourcesContent":["import React from 'react';\r\nimport { colors } from '../utils/colors';\r\nimport { TableHead, TableRow, TableCell, Typography, Checkbox, IconButton, Stack } from '@mui/material'\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nexport default function EnchanedTableHeader({ headerCell, checkbox = false, initialWidth, handleChangeAll, allSelected, preference = false, infoIconLast = false }) {\r\n\r\n    const handleChange = (event, value) => {\r\n        handleChangeAll(event, value)\r\n    }\r\n\r\n    return (\r\n        <TableHead className='mainUserTableHead'>\r\n            <TableRow sx={{\r\n                \"& th\": {\r\n                    backgroundColor: colors.secondary\r\n                }\r\n            }}>\r\n                {\r\n                    checkbox ?\r\n                        <TableCell style={{ width: 'calc(100% - 96.25%)', textAlign: 'center' }}>\r\n                            <Checkbox onChange={handleChange} indeterminate={allSelected} />\r\n                        </TableCell> :\r\n                        <TableCell style={{ width: `calc(100% - ${initialWidth})`, textAlign: 'center', color: colors.primaryDark }}>\r\n                            #\r\n                        </TableCell>\r\n                }\r\n                {\r\n                    headerCell?.map((header, index) => (\r\n                        <TableCell key={index} style={{ width: header.width }}>\r\n                            <Stack\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                justifyContent={\r\n                                    index === headerCell.length - 1\r\n                                        ? \"space-between\"\r\n                                        : \"flex-start\"\r\n                                }\r\n                            >\r\n                                <Stack direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                    justifyContent={\r\n                                        index === headerCell.length - 1\r\n                                            ? \"space-between\"\r\n                                            : \"flex-start\"\r\n                                    }\r\n                                >\r\n                                    <Typography className='ff-Roboto fs-12 fw-medium' style={{ color: colors.primaryDark }}>\r\n                                        {header.name}\r\n                                    </Typography>\r\n                                    {\r\n                                        infoIconLast === true && index === headerCell.length - 1 ?\r\n                                            <InfoOutlinedIcon style={{ marginLeft: '9px', color: 'rgb(73, 96, 115, 0.5)', transform: 'scale(0.8)', cursor: 'pointer' }} />\r\n                                            : ''\r\n                                    }\r\n                                </Stack>\r\n\r\n                                {preference === true && index === headerCell.length - 1 && (\r\n                                    <IconButton\r\n                                        style={{ padding: '0', marginRight: '8px', color: colors.primaryDark }}\r\n                                        aria-label=\"moreColumn\"\r\n                                        component=\"label\"\r\n                                    >\r\n                                        <MoreVertIcon style={{ color: colors.gray }} />\r\n                                    </IconButton>\r\n                                )}\r\n                            </Stack>\r\n\r\n                        </TableCell>\r\n                    ))\r\n                }\r\n            </TableRow>\r\n        </TableHead>\r\n    )\r\n}\r\n","import useDrag from \"./useDrag\";\r\nimport { ScrollMenu } from \"react-horizontal-scrolling-menu\";\r\n\r\nfunction onWheel(apiObj, ev){\r\n    const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\r\n  \r\n    if (isThouchpad) {\r\n      ev.stopPropagation();\r\n      return;\r\n    }\r\n  \r\n    if (ev.deltaY < 0) {\r\n      apiObj.scrollNext();\r\n    } else if (ev.deltaY > 0) {\r\n      apiObj.scrollPrev();\r\n    }\r\n  }\r\n\r\nexport default function HorizontalScroll({children}) {\r\n  const { dragStart, dragStop, dragMove } = useDrag();\r\n  const handleDrag =\r\n    ({ scrollContainer }) =>\r\n    (ev) =>\r\n      dragMove(ev, (posDiff) => {\r\n        if (scrollContainer.current) {\r\n          scrollContainer.current.scrollLeft += posDiff;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <div onMouseLeave={dragStop}>\r\n              <ScrollMenu \r\n              onWheel={onWheel}\r\n              onMouseDown={() => dragStart}\r\n              onMouseUp={() => dragStop}\r\n              onMouseMove={handleDrag}\r\n              >\r\n                {children}\r\n              </ScrollMenu>\r\n        </div>\r\n      );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useDrag() {\r\n    const [clicked, setClicked] = React.useState(false);\r\n    const [dragging, setDragging] = React.useState(false);\r\n    const position = React.useRef(0);\r\n\r\n    const dragStart = React.useCallback((ev) => {\r\n        position.current = ev.clientX;\r\n        setClicked(true);\r\n    }, []);\r\n\r\n    const dragStop = React.useCallback(\r\n        () =>\r\n        // NOTE: need some delay so item under cursor won't be clicked\r\n        window.requestAnimationFrame(() => {\r\n            setDragging(false);\r\n            setClicked(false);\r\n        }), []\r\n    );\r\n\r\n    const dragMove = (ev, cb) => {\r\n        const newDiff = position.current - ev.clientX;\r\n\r\n        const movedEnough = Math.abs(newDiff) > 5;\r\n\r\n        if (clicked && movedEnough) {\r\n            setDragging(true);\r\n        }\r\n\r\n        if (dragging && movedEnough) {\r\n            position.current = ev.clientX;\r\n            cb(newDiff);\r\n        }\r\n    };\r\n\r\n    return {\r\n        dragStart,\r\n        dragStop,\r\n        dragMove,\r\n        dragging,\r\n        position,\r\n        setDragging\r\n    };\r\n}","import React, { useState, useEffect } from 'react'\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { Box, useTheme, IconButton, TextField, MenuItem } from '@mui/material'\r\n\r\nexport default function TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const [pageArr, setPageArr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let totalPage = Math.ceil(count / rowsPerPage);\r\n        let arr = []\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            arr.push(i);\r\n        }\r\n        setPageArr(arr);\r\n    }, [count, rowsPerPage]);\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    const handlePageSelect = (event) => {\r\n        onPageChange(event, event.target.value - 1)\r\n    }\r\n\r\n    return (\r\n        <Box className='tablepagination' sx={{ flexShrink: 0, ml: 2.5 }}>\r\n            <div className='textFieldSelect'>\r\n                <TextField\r\n                    id='pageSelect'\r\n                    name='pageSelect'\r\n                    value={pageArr?.length > 0 ? page + 1 : ''}\r\n                    onChange={handlePageSelect}\r\n                    select\r\n                >\r\n                    {pageArr && pageArr.map((item) => (\r\n                        <MenuItem key={item} value={item}> {item} </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}","import './AnalyticsHeader.scss'\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, Menu, MenuItem, Box, FormControl, FormControlLabel, RadioGroup, Radio, Button } from '@mui/material'\r\nimport { buttonStyle4 } from '../../../../../utils/commonStyle';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { reportSelect } from '../../../../../utils/commonUtils'\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\n\r\nexport default function AnalyticsHeader({ isMobile, colors, selectedOption, SetSelectedOption, handleReport }) {\r\n\r\n    //Options menu\r\n    const [anchorEl, setAnchorEl] = useState(false);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <header className='AnalyticsheaderContainer' style={{ marginBottom: '8px' }}>\r\n            <Stack direction='row' justifyContent='space-between' alignItems={'center'}>\r\n                <Stack style={{ paddingTop: isMobile ? '10px' : '0', width: isMobile ? '100%' : 'initial' }} direction='row' alignItems={isMobile ? 'flex-start' : 'center'} justifyContent={isMobile ? 'space-between' : 'initial'}>\r\n                    <Stack>\r\n                        <Typography className='ff-Roboto fw-medium text-upper' style={{ color: colors.blackMain }}>\r\n                            REPORTS & ANALYTICS\r\n                        </Typography>\r\n                        {\r\n                            isMobile ?\r\n                                <Typography className='ff-Roboto fs-12 fw-regular' style={{ color: colors.black }}>\r\n                                    {selectedOption}\r\n                                </Typography>\r\n                                : ''\r\n                        }\r\n\r\n                    </Stack>\r\n\r\n                    {\r\n                        isMobile ?\r\n                            <Box\r\n                                className='optionsSelectionStyle'\r\n                                id='resource-button'\r\n                                onClick={handleMenuOpen}\r\n                                aria-controls={open ? 'resource-menu' : undefined}\r\n                                aria-haspopup='true'\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                                style={{ justifyContent: 'space-around' }}\r\n                            >\r\n                                <DateRangeIcon style={{ transform: 'scale(0.8)' }} />\r\n                                <KeyboardArrowDownIcon style={{ color: 'rgb(0, 0, 0, 0.3)' }} />\r\n                            </Box>\r\n                            :\r\n                            <Box className='optionsSelectionStyle'\r\n                                id='resource-button'\r\n                                onClick={handleMenuOpen}\r\n                                aria-controls={open ? 'resource-menu' : undefined}\r\n                                aria-haspopup='true'\r\n                                aria-expanded={open ? 'true' : undefined}\r\n                            >\r\n                                <Typography className='ff-Roboto fw-regular fs-12' style={{ color: colors.black, width: '72%', paddingLeft: '16px' }}>\r\n                                    {selectedOption}\r\n                                </Typography>\r\n                                <KeyboardArrowDownIcon style={{ color: 'rgb(0, 0, 0, 0.3)' }} />\r\n                            </Box>\r\n                    }\r\n\r\n                    <Menu className='reportBar' id='resource-menu' anchorEl={anchorEl} open={open}\r\n                        MenuListProps={{\r\n                            \"aria-labelledby\": 'resource-button',\r\n                        }}\r\n                        onClose={handleMenuClose}\r\n                        PaperProps={{\r\n                            style: {\r\n                                width: '176px',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {\r\n                            <FormControl>\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue={selectedOption}\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    {\r\n                                        reportSelect.map((item) => (\r\n                                            <MenuItem disableTouchRipple key={item.name} onClose={handleMenuClose} >\r\n                                                <FormControlLabel value={item.name}\r\n                                                    control={<Radio\r\n                                                        size=\"small\"\r\n                                                        sx={{\r\n                                                            color: colors.black,\r\n                                                            padding: '0 0 0 8px',\r\n                                                            '&.Mui-checked': {\r\n                                                                color: colors.black\r\n                                                            },\r\n                                                        }}\r\n                                                        onChange={() => SetSelectedOption(item.name)}\r\n                                                    />} label={item.name} />\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n\r\n                        }\r\n\r\n                    </Menu>\r\n                </Stack>\r\n\r\n                {\r\n                    isMobile ? '' :\r\n                        <div className='flex-aligncenter'>\r\n                            <Button onClick={handleReport} sx={{ ...buttonStyle4, marginRight: '0', minWidth: '112px', width: '112px', height: '36px', textTransform: 'uppercase', borderRadius: '16px' }} className='ff-Roboto fw-regular fs-12' variant=\"contained\">\r\n                                Report\r\n                            </Button>\r\n                        </div>\r\n                }\r\n\r\n            </Stack>\r\n        </header>\r\n    )\r\n}\r\n","import './EcoAnalyticsCard.scss';\r\nimport React from 'react';\r\nimport millify from \"millify\";\r\nimport { Stack, Typography, Box } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\n\r\nexport default function EcoAnalyticsCard({ item, index, isMobile }) {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isMobile ?\r\n                    <Box key={index} className='mobileAnalyticsCard'>\r\n                        <Stack direction='row' justifyContent='space-between'>\r\n                            <Typography style={{ width: '87px' }} className='ff-Roboto fs-14 fw-medium black'>\r\n                                {item.name}\r\n                            </Typography>\r\n                            <Stack alignItems='flex-end'>\r\n                                <Typography className='ff-Roboto fs-10 fw-medium' color={colors.active}>\r\n                                    {\r\n                                        item.slides ? item.slides : ''\r\n                                    }\r\n                                </Typography>\r\n                                <Typography className='fs-32 ff-Roboto fw-bold'\r\n                                    color={item.name === 'Unique Users Engaged' ? colors.primaryHover :\r\n                                        item.name === 'Trees planted' ? colors.active : colors.blackMain}>\r\n                                    {millify(item.data)}\r\n                                </Typography>\r\n                            </Stack>\r\n                        </Stack>\r\n\r\n                    </Box>\r\n                    :\r\n                    <Stack key={index} className='analyticsCard'>\r\n                        <Stack direction='row' justifyContent='space-between'>\r\n                            <Typography style={{ width: '87px' }} className='ff-Roboto fs-14 fw-medium black'>\r\n                                {item.name}\r\n                            </Typography>\r\n                            {\r\n                                item.name === 'Total GHG Impact' ?\r\n                                    <InfoOutlinedIcon style={{ color: 'rgb(73, 96, 115, 0.5)', transform: 'scale(0.8)', cursor: 'pointer' }} /> :\r\n                                    <Typography className='ff-Roboto fs-10 fw-medium' color={colors.active}>\r\n                                        {\r\n                                            item.slides ? item.slides : ''\r\n                                        }\r\n                                    </Typography>\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-32 ff-Roboto fw-bold' color={colors.primaryHover}>\r\n                            {millify(item.data)}\r\n                        </Typography>\r\n                    </Stack>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { faker } from '@faker-js/faker';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport default function LineChart({ isMobile }) {\r\n\r\n    const options = {\r\n        type: \"chart\",\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                position: \"top\"\r\n            },\r\n            title: {\r\n                display: false,\r\n                text: \"Chart.js Line Chart\"\r\n            }\r\n        },\r\n        scales: {\r\n            y: {\r\n                display: false\r\n            },\r\n            x: {\r\n                grid: {\r\n                    drawBorder: false,\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        size: isMobile ? 8 : 12,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const labels = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sept\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n    ];\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                // label: 'Dataset 1',\r\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n                borderColor: \"#48B549\",\r\n                // backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                borderWidth: 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Line options={options} data={data} />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { faker } from '@faker-js/faker';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport default function BarChart({ isMobile }) {\r\n\r\n    const options = {\r\n        type: \"chart\",\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n                position: 'top',\r\n            },\r\n            title: {\r\n                display: false,\r\n                text: 'Chart.js Bar Chart',\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    display: false,\r\n                    drawBorder: false,\r\n                },\r\n                ticks: {\r\n                    font: {\r\n                        size: isMobile ? 8 : 12,\r\n                    }\r\n                }\r\n            },\r\n            y: {\r\n                display: false,\r\n                grid: {\r\n                    display: false\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const labels = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sept\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n    ];\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n                backgroundColor: 'rgb(55, 135, 201, 0.5)',\r\n                // barThickness: 48,\r\n                borderRadius: 4,\r\n                borderSkipped: false,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Bar options={options} data={data} />\r\n    )\r\n}\r\n","import './AnalyticsChart.scss';\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, TextField, MenuItem, useMediaQuery } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport { analyticData, barDataType } from '../../../../../utils/commonUtils';\r\nimport LineChart from '../Chart/LineChart';\r\nimport BarChart from '../Chart/BarChart';\r\n\r\nexport default function AnalyticsChart({ barType, setBarType, barData, setBarData }) {\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n    const handleDataSelect = (e) => {\r\n        setBarData(e.target.value)\r\n    }\r\n\r\n    const handleChartType = (e) => {\r\n        setBarType(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Stack direction={isMobile ? 'column' : 'row'}>\r\n            {/**\r\n             * Input Section\r\n             */}\r\n            <Stack style={{ width: isMobile ? '100%' : '232px' }}>\r\n                <Typography color={colors.blackMain} className={isMobile ? 'fw-bold ' : 'fw-medium ' + 'ff-Roboto fs-14'}>Plot Graphs</Typography>\r\n                <Stack className='mt-13'>\r\n                    <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Data</Typography>\r\n                    <TextField\r\n                        fullWidth\r\n                        id='graphData'\r\n                        name='graphData'\r\n                        value={barData}\r\n                        onChange={(e) => handleDataSelect(e)}\r\n                        select\r\n                    >\r\n                        {analyticData.map((item) => (\r\n                            <MenuItem key={item.name} value={item.name}> {item.name} </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Stack>\r\n                <Stack className={isMobile ? 'mt-6' : 'mt-22'}>\r\n                    <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Graph Type</Typography>\r\n                    <TextField\r\n                        fullWidth\r\n                        id='graphData'\r\n                        name='graphData'\r\n                        value={barType}\r\n                        onChange={(e) => handleChartType(e)}\r\n                        select\r\n                    >\r\n                        {barDataType.map((item) => (\r\n                            <MenuItem key={item.type} value={item.type}> {item.name} </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Stack>\r\n            </Stack>\r\n            {/**\r\n             * Chart Section\r\n             */}\r\n            {\r\n                isMobile ?\r\n                    <Typography style={{ marginTop: '13px' }} className='fs-12 ff-Roboto fw-medium' color={colors.blackMain}>\r\n                        {barData}\r\n                    </Typography>\r\n                    : ''\r\n            }\r\n            <div className='mobileBar' style={{ padding: '5px 5px', marginLeft: isMobile ? '0' : '12px', width: isMobile ? 'auto' : 'calc(100% - 244px)', height: isMobile ? '152px' : '250px' }}>\r\n                {\r\n                    barType === 'bar' ?\r\n                        <BarChart isMobile={isMobile} />\r\n                        :\r\n                        <LineChart isMobile={isMobile} />\r\n                }\r\n            </div>\r\n        </Stack>\r\n    )\r\n}\r\n","import './CampaignSection.scss'\r\nimport React from 'react';\r\nimport EnchanedTableHeader from '../../../../../components/EnchanedTableHeader';\r\nimport { Typography, TableContainer, Table, TableBody, TableRow, TableCell, Checkbox } from '@mui/material';\r\nimport millify from 'millify';\r\n\r\nconst headerCell = [\r\n    {\r\n        name: 'Campaign Name',\r\n        width: '15%'\r\n    },\r\n    {\r\n        name: 'Total Participants',\r\n        width: '11.875%'\r\n    },\r\n    {\r\n        name: 'Total Actions',\r\n        width: '10.875%'\r\n    },\r\n    {\r\n        name: 'Eco-points Awarded',\r\n        width: '13.125%'\r\n    },\r\n    {\r\n        name: 'Average Actions',\r\n        width: '10.625%'\r\n    },\r\n    {\r\n        name: 'Average Eco-Points',\r\n        width: '10.625%',\r\n    },\r\n    {\r\n        name: 'Result',\r\n        width: '10.875%'\r\n    },\r\n    {\r\n        name: 'Carbon impact',\r\n        width: '13.25%'\r\n    }\r\n]\r\n\r\nexport default function CampaignTable({ length, page, rowsPerPage, allSelected, handleChangeAll, handleCheckedChange }) {\r\n\r\n    return (\r\n        <div className='CampaignTable'>\r\n            <div className='tableContainer'>\r\n                <TableContainer sx={{ maxHeight: 'calc(100vh - 128px)' }}>\r\n                    <Table style={{ tableLayout: 'fixed' }} stickyHeader aria-label=\"sticky table\" sx={{ width: '100%' }}>\r\n                        <EnchanedTableHeader\r\n                            headerCell={headerCell}\r\n                            handleChangeAll={((event, value) => handleChangeAll(event, value))}\r\n                            allSelected={allSelected}\r\n                            checkbox={true}\r\n                            preference={true}\r\n                            infoIconLast={true}\r\n                        />\r\n                        <TableBody className='mainUserBodyTable'>\r\n                            {\r\n                                [1, 2, 3].map((item, index) => (\r\n                                    <TableRow className='tableRowHover' key={index}>\r\n                                        <TableCell align='center' style={{ width: 'calc(100% - 96.25%)' }} className={item?.isSelected ? 'selectedStyle tablecellonHover' : 'tablecellonHover'}>\r\n                                            <Checkbox checked={item.isSelected}\r\n                                                onChange={() => handleCheckedChange(item)} className={item?.isSelected ? 'checkedItems' : 'checkboxonHover'} />\r\n                                            <Typography className={(item?.isSelected ? 'indexChecked ' : 'indexStyle ') + 'ff-Roboto fs-12 fw-regular black'}>\r\n                                                {(rowsPerPage * (page)) + index + 1}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                Name of the Eco-initiative\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                245\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                100\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                {millify(3500000)}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                5/user\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                200/user\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                5M Clothes Donated\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                10 Tons\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './CampaignSection.scss'\r\nimport React from 'react';\r\nimport { Stack, Typography, Box } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport millify from 'millify';\r\n\r\nexport default function CampaignCard() {\r\n    return (\r\n        <div className='campaignMobileCard'>\r\n            <Stack>\r\n                <Typography className='ff-Roboto fw-medium' color={colors.black} style={{ marginLeft: '8px' }}>\r\n                    Name of the Eco-initiative\r\n                </Typography>\r\n                <Box className='mt-13 boxContainer'>\r\n                    <Stack direction='row'>\r\n                        <Stack style={{ width: '50%', rowGap: '16px' }}>\r\n                            <div>\r\n                                <Typography className='ff-Roboto fw-regular black'>\r\n                                    {millify(2500000)}\r\n                                </Typography>\r\n                                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.primaryHover}>\r\n                                    Participants\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className='ff-Roboto fw-regular black'>\r\n                                    {millify(10000000)}\r\n                                </Typography>\r\n                                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.primaryHover}>\r\n                                    Eco-points Awarded\r\n                                </Typography>\r\n                            </div>\r\n                        </Stack>\r\n                        <Stack style={{ width: '50%', rowGap: '16px' }}>\r\n                            <div>\r\n                                <Typography className='ff-Roboto fw-regular black'>\r\n                                    {millify(100000)}\r\n                                </Typography>\r\n                                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.primaryHover}>\r\n                                    Total Actions\r\n                                </Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className='ff-Roboto fw-regular black'>\r\n                                    {millify(100000)}\r\n                                </Typography>\r\n                                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.primaryHover}>\r\n                                    Average Eco-Points\r\n                                </Typography>\r\n                            </div>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Box>\r\n                <div className='mt-14'>\r\n                    <Typography className='fs-12 ff-Roboto fw-regular' style={{ lineHeight: 'initial' }}>Result</Typography>\r\n                    <Typography className='ff-Roboto fw-regular black' style={{ lineHeight: 'initial' }}>5M Clothes Donated</Typography>\r\n                </div>\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n","import './CampaignSection.scss'\r\nimport React, { useState } from 'react';\r\nimport CampaignTable from './CampaignTable';\r\nimport CampaignCard from './CampaignCard';\r\nimport { TablePagination, useMediaQuery, Typography, Stack } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport TablePaginationActions from '../../../../../components/TablePaginationActions';\r\n\r\nexport default function CampaignSection() {\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [length, setLength] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n    const [backendpage, setBackendPage] = useState(1)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [allSelected, setAllSelected] = useState(false);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setBackendPage(newPage + 1)\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setBackendPage(1)\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeAll = (event, value) => {\r\n        console.log(value);\r\n        setAllSelected(!allSelected)\r\n    }\r\n\r\n    const handleCheckedChange = (item) => {\r\n        console.log(item);\r\n    }\r\n\r\n    return (\r\n        <div className='inputFormStyle'>\r\n            {/**\r\n               * Top Toolbar\r\n               */}\r\n            <header className={isMobile && 'headerMobile'} style={{ marginBottom: '8px', padding: isMobile ? '0' : '8px  0', position: 'initial' }}>\r\n                <Stack direction='row' justifyContent='space-between' alignItems={'center'}>\r\n                    <Typography className='ff-Roboto fw-medium text-upper' style={{ color: colors.blackMain }}>\r\n                        Campaign\r\n                    </Typography>\r\n                    <div className='flex-aligncenter'>\r\n                        {\r\n                            isMobile ? null :\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[]}\r\n                                    count={length ? length : 1}\r\n                                    rowsPerPage={rowsPerPage ? rowsPerPage : 10}\r\n                                    page={page ? page : 0}\r\n                                    onPageChange={handleChangePage}\r\n                                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Stack>\r\n            </header>\r\n            {\r\n                isMobile ?\r\n                    <>\r\n                        {\r\n                            [1, 2, 3].map((item, index) => (\r\n                                <CampaignCard />\r\n                            ))\r\n                        }\r\n                        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[]}\r\n                                count={length ? length : 1}\r\n                                rowsPerPage={rowsPerPage ? rowsPerPage : 5}\r\n                                page={page ? page : 0}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <CampaignTable\r\n                        length={length}\r\n                        page={page}\r\n                        rowsPerPage={rowsPerPage}\r\n                        allSelected={allSelected}\r\n                        handleChangeAll={handleChangeAll}\r\n                        handleCheckedChange={handleCheckedChange}\r\n                    />\r\n            }\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import './ReportSection.scss'\r\nimport React from 'react';\r\nimport { Typography, TableContainer, Table, TableBody, TableRow, TableCell, Stack } from '@mui/material';\r\nimport EnchanedTableHeader from '../../../../../components/EnchanedTableHeader';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nconst headerCell = [\r\n    {\r\n        name: 'Report',\r\n        width: '25.625%'\r\n    },\r\n    {\r\n        name: 'Date Created',\r\n        width: '61.25%'\r\n    },\r\n    {\r\n        name: 'Action',\r\n        width: '10%'\r\n    }\r\n]\r\n\r\nexport default function ReportTable({ length, page, rowsPerPage }) {\r\n    return (\r\n        <div className='ReportTable'>\r\n            <div className='tableContainer'>\r\n                <TableContainer sx={{ maxHeight: 'calc(100vh - 128px)' }}>\r\n                    <Table style={{ tableLayout: 'fixed' }} stickyHeader aria-label=\"sticky table\" sx={{ width: '100%' }}>\r\n                        <EnchanedTableHeader\r\n                            headerCell={headerCell}\r\n                            checkbox={false}\r\n                            preference={false}\r\n                            infoIconLast={false}\r\n                            initialWidth={96.875}\r\n                        />\r\n                        <TableBody className='mainUserBodyTable'>\r\n                            {\r\n                                [1, 2, 3].map((item, index) => (\r\n                                    <TableRow className='tableRowHover' key={index}>\r\n                                        <TableCell align='center' className='color-inherit' style={{ width: 'calc(100% - 96.875%)' }}>\r\n                                            <Typography className={'ff-Roboto fs-12 fw-regular'}>\r\n                                                {(rowsPerPage * (page)) + index + 1}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: '25.625%' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                Name of the report\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: '61.25%' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                12 July, 2022\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: '10%' }}>\r\n                                            <Stack direction='row' alignItems='center'>\r\n                                                <DownloadIcon style={{ transform: 'scale(0.706)' }} />\r\n                                                <Typography className='fs-12 ff-Roboto fw-bold ellipseStyle' color={colors.blackMain}>\r\n                                                    DOWNLOAD\r\n                                                </Typography>\r\n                                            </Stack>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './ReportSection.scss';\r\nimport React from 'react';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { Stack, Typography, IconButton } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\n\r\nexport default function ReportCard() {\r\n    return (\r\n        <div className='reportMobileCard'>\r\n            <Stack direction='row' alignItems='center' justifyContent='space-between'>\r\n                <div>\r\n                    <Typography className='fs-14 ff-Roboto fw-medium' color={colors.primaryHover}>\r\n                        Eco Points Rewarded\r\n                    </Typography>\r\n                    <Typography className='fs-12 ff-Roboto fw-regular black'>\r\n                        24-10-22\r\n                    </Typography>\r\n                </div>\r\n                <IconButton style={{ background: colors.buttonColor, height: '32px', width: '32px' }}>\r\n                    <DownloadIcon style={{ transform: 'scale(0.706)', color: '#FFF' }} />\r\n                </IconButton>\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n","import './ReportSection.scss'\r\nimport React, { useState } from 'react';\r\nimport { TablePagination, useMediaQuery, Typography, Stack } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport TablePaginationActions from '../../../../../components/TablePaginationActions';\r\nimport ReportTable from './ReportTable';\r\nimport ReportCard from './ReportCard';\r\n\r\nexport default function ReportSection() {\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [length, setLength] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n    const [backendpage, setBackendPage] = useState(1)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setBackendPage(newPage + 1)\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setBackendPage(1)\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div className='inputFormStyle' style={{ paddingBottom: '20px' }}>\r\n            {/**\r\n               * Top Toolbar\r\n               */}\r\n            <header className={isMobile && 'headerMobile'} style={{ marginBottom: '8px', padding: isMobile ? '0' : '8px  0', position: 'initial' }}>\r\n                <Stack direction='row' justifyContent='space-between' alignItems={'center'}>\r\n                    <Typography className='ff-Roboto fw-medium text-upper' style={{ color: colors.blackMain, paddingTop: isMobile ? '17px' : '0' }}>\r\n                        Reports\r\n                    </Typography>\r\n                    <div className='flex-aligncenter'>\r\n                        {\r\n                            isMobile ? null :\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[]}\r\n                                    count={length ? length : 1}\r\n                                    rowsPerPage={rowsPerPage ? rowsPerPage : 10}\r\n                                    page={page ? page : 0}\r\n                                    onPageChange={handleChangePage}\r\n                                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Stack>\r\n            </header>\r\n            {\r\n                isMobile ?\r\n                    <>\r\n                        {\r\n                            [1, 2, 3].map((item, index) => (\r\n                                <ReportCard />\r\n                            ))\r\n                        }\r\n                        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[]}\r\n                                count={length ? length : 1}\r\n                                rowsPerPage={rowsPerPage ? rowsPerPage : 5}\r\n                                page={page ? page : 0}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <ReportTable\r\n                        length={length}\r\n                        page={page}\r\n                        rowsPerPage={rowsPerPage}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './Analytics.scss';\r\nimport React, { useState } from 'react';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport { colors } from '../../../utils/colors';\r\nimport { analyticData } from '../../../utils/commonUtils';\r\nimport AnalyticsHeader from './components/AnalyticsHeader/AnalyticsHeader';\r\nimport EcoAnalyticsCard from './components/EcoAnalyticsCard/EcoAnalyticsCard';\r\nimport AnalyticsChart from './components/AnalyticsChart/AnalyticsChart';\r\nimport CampaignSection from './components/CampaignSection/CampaignSection';\r\nimport ReportSection from './components/ReportSection/ReportSection';\r\nimport HorizontalScroll from '../../../components/HorizontalScroll/HorizontalScroll';\r\n\r\nexport default function Analytics() {\r\n\r\n    //States\r\n    const [barType, setBarType] = useState('bar');\r\n    const [barData, setBarData] = useState('Trees planted');\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [selectedOption, SetSelectedOption] = useState('Monthly');\r\n\r\n    //Scroll into Report Table View\r\n    const handleReport = () => {\r\n        console.log('yes')\r\n        const elemToView = document.getElementById('ref')\r\n        if (elemToView != null) {\r\n            elemToView.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'nearest' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Analytics'>\r\n            {/**\r\n             * Top Toolbar\r\n             */}\r\n            <AnalyticsHeader isMobile={isMobile} colors={colors}\r\n                selectedOption={selectedOption} SetSelectedOption={(event) => SetSelectedOption(event)}\r\n                handleReport={handleReport} />\r\n            <div className='innerDivPadding'>\r\n                {/**\r\n                 * Eco Analytics Cards\r\n                 */}\r\n                <div >\r\n                    {\r\n                        isMobile ?\r\n                            <div>\r\n                                {\r\n                                    analyticData?.map((item, index) => (\r\n                                        <EcoAnalyticsCard item={item} index={index} isMobile={isMobile} />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            :\r\n                            <HorizontalScroll>\r\n                                {\r\n                                    analyticData?.map((item, index) => (\r\n                                        <EcoAnalyticsCard item={item} index={index} isMobile={isMobile} />\r\n                                    ))\r\n                                }\r\n                            </HorizontalScroll>\r\n                    }\r\n\r\n                </div>\r\n                {/**\r\n                 * Chart Data\r\n                 */}\r\n                <div className='chartSection'>\r\n                    <AnalyticsChart\r\n                        barType={barType}\r\n                        setBarType={((e) => setBarType(e))}\r\n                        barData={barData}\r\n                        setBarData={((e) => setBarData(e))}\r\n                    />\r\n                </div>\r\n                {/**\r\n                 * Campaigns List\r\n                 */}\r\n                <div className='CampaignSection'>\r\n                    <CampaignSection />\r\n                </div>\r\n                {/**\r\n                 * Report List\r\n                 */}\r\n                <div className='ReportSection' id='ref'>\r\n                    <ReportSection />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["EnchanedTableHeader","headerCell","checkbox","initialWidth","handleChangeAll","allSelected","preference","infoIconLast","className","sx","backgroundColor","colors","style","width","textAlign","onChange","event","value","indeterminate","color","map","header","index","direction","alignItems","justifyContent","length","name","marginLeft","transform","cursor","padding","marginRight","component","onWheel","apiObj","ev","Math","abs","deltaX","deltaY","stopPropagation","scrollNext","scrollPrev","HorizontalScroll","children","React","clicked","setClicked","dragging","setDragging","position","dragStart","current","clientX","dragStop","window","requestAnimationFrame","dragMove","cb","newDiff","movedEnough","useDrag","onMouseLeave","ScrollMenu","onMouseDown","onMouseUp","onMouseMove","scrollContainer","posDiff","scrollLeft","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","useState","pageArr","setPageArr","useEffect","totalPage","ceil","arr","i","push","flexShrink","ml","id","target","select","item","onClick","disabled","max","AnalyticsHeader","isMobile","selectedOption","SetSelectedOption","handleReport","anchorEl","setAnchorEl","open","Boolean","handleMenuOpen","currentTarget","handleMenuClose","marginBottom","Stack","paddingTop","Typography","blackMain","black","Box","undefined","DateRange","KeyboardArrowDown","paddingLeft","Menu","MenuListProps","onClose","PaperProps","FormControl","RadioGroup","defaultValue","reportSelect","MenuItem","disableTouchRipple","FormControlLabel","control","Radio","size","label","Button","buttonStyle4","minWidth","height","textTransform","borderRadius","variant","EcoAnalyticsCard","slides","millify","data","InfoOutlined","LineChart","options","type","responsive","maintainAspectRatio","plugins","legend","display","title","text","scales","y","x","grid","drawBorder","ticks","font","labels","datasets","faker","min","borderColor","borderWidth","BarChart","borderSkipped","AnalyticsChart","barType","setBarType","barData","setBarData","useMediaQuery","TextField","fullWidth","e","handleDataSelect","analyticData","handleChartType","barDataType","marginTop","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","CampaignTable","handleCheckedChange","TableContainer","maxHeight","Table","tableLayout","stickyHeader","TableBody","TableRow","TableCell","align","isSelected","Checkbox","checked","CampaignCard","rowGap","lineHeight","CampaignSection","setPage","setBackendPage","setRowsPerPage","setAllSelected","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","TablePagination","rowsPerPageOptions","onRowsPerPageChange","ActionsComponent","console","log","ReportTable","Download","ReportCard","IconButton","background","ReportSection","paddingBottom","Analytics","elemToView","document","getElementById","scrollIntoView","behavior","block","inline"],"sourceRoot":""}