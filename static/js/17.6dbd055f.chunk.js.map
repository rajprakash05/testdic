{"version":3,"file":"static/js/17.6dbd055f.chunk.js","mappings":"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","sources":["components/DetailCard.js","pages/Auth/register/Register.js"],"sourcesContent":["import React from 'react'\r\nimport { detailArr } from '../utils/commonUtils'\r\nimport { Stack, Typography } from '@mui/material'\r\nimport { colors } from '../utils/colors'\r\n\r\nexport default function DetailCard() {\r\n    return (\r\n        detailArr.map((item, index) => (\r\n            <Stack key={index} direction='row'>\r\n                <img alt={item.title} src={item.logo} />\r\n                <Stack className='details'>\r\n                    <Typography className='ff-Roboto fw-medium fs-14' style={{ color: colors.black }}>\r\n                        {item.title}\r\n                    </Typography>\r\n                    <Typography className='ff-Roboto fw-regular fs-12' style={{ color: colors.blackSecondary, width: '216px' }}>\r\n                        {item.subTitle}\r\n                    </Typography>\r\n                </Stack>\r\n            </Stack>\r\n        ))\r\n    )\r\n}\r\n","import './Register.scss';\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { TextField, Button, Stack, InputAdornment, IconButton, useMediaQuery, Typography, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { showmessage } from '../../../utils/toastr';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../../redux/features/authSlice';\r\nimport { useParams } from 'react-router-dom'\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { encrypt } from '../../../utils/Crpyto';\r\nimport { colors } from '../../../utils/colors';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg'\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport SocialCard from '../../../components/SocialCard';\r\nimport DetailCard from '../../../components/DetailCard';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your Email')\r\n    .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n    .required('Email is Required'),\r\n  name: yup\r\n    .string('Enter your Name')\r\n    .min(3, 'Name must minimum of 3 characters')\r\n    .max(100, 'Name must maximum of 100 characters')\r\n    .required('Name is Required')\r\n    .trim(),\r\n  designation: yup\r\n    .string('Enter your Department')\r\n    .required('Organization is Required')\r\n    .max(50, 'Name must maximum of 50 characters')\r\n    .trim(),\r\n  department: yup\r\n    .string('Enter your Department')\r\n    .required('Deparment is Required')\r\n    .max(50, 'Name must maximum of 50 characters')\r\n    .trim(),\r\n  password: yup\r\n    .string('Enter your Password')\r\n    // .min(8, 'Password must be minimum of 6 characters')\r\n    // .max(12, 'Password must be maximum of 12 characters')\r\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/, 'Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n    .required('Password is requried')\r\n    .trim(),\r\n  termsandCondition: yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\r\n})\r\n\r\nexport default function Register() {\r\n\r\n  const dispatch = useDispatch()\r\n  const paramsFromUrl = useParams()\r\n\r\n  const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    name: '',\r\n    designation: '',\r\n    department: '',\r\n    password: '',\r\n    termsandCondition: false\r\n  })\r\n\r\n  //checkVerificationTokenStatus \r\n  const handleVerificationToken = async () => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    const response = await appapi.post(`/auth/verifyInviteToken`, {}, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        setData(prev => ({ ...prev, email: data.data.emailId }))\r\n      } else {\r\n        setMessage(data.message)\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 3000, 'error')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleVerificationToken()\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: data,\r\n    validationSchema: validationSchema,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    onSubmit: (values) => {\r\n      register(values)\r\n    },\r\n  })\r\n\r\n  /**\r\n   * Register User\r\n   * @param {email,name,department, password} obj \r\n   */\r\n  const register = async (obj) => {\r\n    dispatch(setLoading(true))\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken\r\n      }\r\n    }\r\n    let payload = {\r\n      name: obj.name,\r\n      password: obj.password,\r\n      department: obj.department,\r\n      designation: obj.designation,\r\n      deviceId: '123'\r\n    }\r\n    let dataObj = {}\r\n    const response = await appapi.post(`/auth/signup/invite`, payload, params)\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false))\r\n      if (data.status === 'success') {\r\n        showmessage(data.message)\r\n        dataObj = { ...data.data }\r\n        let encryptedData = encrypt(JSON.stringify(data.data))\r\n        localStorage.setItem('diz', encryptedData)\r\n        appapi.setHeader('Authorization', `Bearer ${data.data.accessToken}`);\r\n        dispatch(login(dataObj))\r\n      } else {\r\n        showmessage(data.message, 5000, 'error')\r\n      }\r\n    } else {\r\n      dispatch(setLoading(false))\r\n      showmessage(`Something Went Wrong!`, 3000, 'error')\r\n    }\r\n  }\r\n\r\n  const registerForm = ({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => {\r\n    return (\r\n      <>\r\n        <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n        <form onSubmit={handleSubmit} style={{ minHeight: isMobile ? '730px' : '700px' }}>\r\n          <Stack>\r\n            <Stack className='mt-17'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Email</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='email'\r\n                name='email'\r\n                value={values?.email?.toLowerCase().replace(/^\\s/g, '') || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.email && Boolean(errors.email)}\r\n                helperText={(touched.email || dirty.email) && errors.email}\r\n                disabled={values.email ? true : false}\r\n                InputProps={{\r\n                  classes: {\r\n                    disabled: 'disabled'\r\n                  }\r\n                }}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Name</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='name'\r\n                name='name'\r\n                value={values?.name?.replace(/^\\s/g, '') || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.name && Boolean(errors.name)}\r\n                helperText={(touched.name || dirty.name) && errors.name}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Designation</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='designation'\r\n                name='designation'\r\n                value={values?.designation?.replace(/^\\s/g, '') || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.designation && Boolean(errors.designation)}\r\n                helperText={(touched.designation || dirty.designation) && errors.designation}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14'>\r\n              <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Department</Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='department'\r\n                name='department'\r\n                value={values?.department?.replace(/^\\s/g, '') || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.department && Boolean(errors.department)}\r\n                helperText={(touched.department || dirty.department) && errors.department}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-14 passwordField'>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Password</Typography>\r\n              </div>\r\n              <TextField\r\n                fullWidth\r\n                id='password'\r\n                name='password'\r\n                value={values?.password?.trim() || ''}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                type={visibility ? 'text' : 'password'}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={(touched.password || dirty.password) && errors.password}\r\n                className={values.password ? 'helperTextStyleblack' : 'helperTextStylered'}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position='end'>\r\n                      {\r\n                        <IconButton onClick={() => setVisibility(!visibility)}>\r\n                          {visibility ? <VisibilityOutlinedIcon /> : <VisibilityOffOutlinedIcon />}\r\n                        </IconButton>\r\n                      }\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n            </Stack>\r\n            <Stack className='mt-17 checkboxStyle'>\r\n              <FormControlLabel\r\n                required\r\n                control={\r\n                  <Checkbox\r\n                    sx={{\r\n                      '&.Mui-checked': {\r\n                        color: colors.primaryTxt,\r\n                      },\r\n                    }}\r\n                    id='termsandCondition'\r\n                    name='termsandCondition'\r\n                    checked={!!values.termsandCondition}\r\n                    onChange={handleChange} />\r\n                }\r\n                label={<Typography className='fs-12 ff-Roboto fw-regular black'>I agree to the Terms of Service and Privacy Policy</Typography>}\r\n              />\r\n            </Stack>\r\n            <Button sx={buttonStyle1} disabled={!(dirty && isValid)} type='submit'>Create</Button>\r\n          </Stack>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='registerComponent' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n      {\r\n        isMobile ?\r\n          <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n            <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n              <div className='logoImg'>\r\n                <img alt='dizLogo' src={diztextlogo} />\r\n              </div>\r\n              <div className='innerContainer' style={{ marginTop: message ? '140px' : '28px' }}>\r\n\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm({ ...formik })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '768px' }} direction='row' justifyContent='space-between'>\r\n            <Stack className='leftStack' style={{ width: '50%' }}>\r\n              <div className='logoImg'>\r\n                <img alt='dizLogo' src={diztextlogo} />\r\n              </div>\r\n              <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                <Stack className='detailsList'>\r\n                  {\r\n                    <DetailCard />\r\n                  }\r\n                </Stack>\r\n                <Stack className='socialContainer' direction='row'>\r\n                  {\r\n                    <SocialCard />\r\n                  }\r\n                </Stack>\r\n              </div>\r\n            </Stack>\r\n            <Stack className='rightStack' style={{ width: '50%' }}>\r\n              <div className='innerContainer' style={{ marginTop: message ? '22.916666666667vh' : '10.916667vh' }}>\r\n                {message ?\r\n                  <>\r\n                    <Stack>\r\n                      <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                      <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </>\r\n                  :\r\n                  registerForm({ ...formik })\r\n                }\r\n              </div>\r\n            </Stack>\r\n          </Stack>\r\n      }\r\n      {\r\n        isMobile ?\r\n          <Stack className='footer' alignItems='center' direction='row' justifyContent='space-between'>\r\n            <Stack className='socialContainer' direction='row'>\r\n              {\r\n                <SocialCard />\r\n              }\r\n            </Stack>\r\n            <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n          </Stack>\r\n          :\r\n          <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"],"names":["DetailCard","detailArr","item","index","direction","alt","title","src","logo","className","style","color","colors","width","subTitle","validationSchema","yup","email","matches","required","name","min","max","trim","designation","department","password","termsandCondition","oneOf","Register","dispatch","useDispatch","paramsFromUrl","useParams","isMobile","useMediaQuery","useState","visibility","setVisibility","message","setMessage","data","setData","handleVerificationToken","setLoading","params","verificationToken","appapi","response","ok","status","prev","emailId","showmessage","useEffect","formik","useFormik","enableReinitialize","initialValues","validateOnBlur","validateOnChange","onSubmit","values","register","obj","payload","deviceId","dataObj","encryptedData","encrypt","JSON","stringify","localStorage","setItem","accessToken","login","registerForm","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","Typography","minHeight","Stack","TextField","fullWidth","id","value","toLowerCase","replace","onChange","onBlur","error","Boolean","helperText","disabled","InputProps","classes","display","justifyContent","alignItems","type","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOutlined","VisibilityOffOutlined","FormControlLabel","control","Checkbox","sx","checked","label","Button","buttonStyle1","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","diztextlogo","marginTop","marginBottom","maxWidth","margin","wavesbg","SocialCard"],"sourceRoot":""}