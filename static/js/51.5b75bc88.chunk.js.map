{"version":3,"file":"static/js/51.5b75bc88.chunk.js","mappings":"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","sources":["pages/Auth/finalizeSignup/FinalizeSignup.js"],"sourcesContent":["import \"./FinalizeSignup.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Stack, useMediaQuery, Typography, Button } from \"@mui/material\";\r\nimport diztextlogo from \"../../../assets/images/diztextlogo.svg\";\r\nimport wavesbg from \"../../../assets/images/wavesbg.svg\";\r\nimport { colors } from \"../../../utils/colors\";\r\nimport { buttonStyle1 } from \"../../../utils/commonStyle\";\r\nimport mobilewavybg from \"../../../assets/images/mobilewavybg.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport appapi from \"../../../api/apiClient\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../../../redux/features/appSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { showmessage } from \"../../../utils/toastr\";\r\nimport SocialCard from \"../../../components/SocialCard\";\r\nimport dizlogoMobile from \"../../../assets/images/dizlogoMobile.svg\";\r\n\r\nexport default function FinalizeSignup() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const isMobile = useMediaQuery(\"(max-width:1000px)\");\r\n  const paramsFromUrl = useParams();\r\n  const [message, setMessage] = useState({\r\n    status: \"\",\r\n    msg: \"\",\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n\r\n  /**\r\n   *\r\n   * @returns Redirect to initial page which is login\r\n   */\r\n  const onClickLoginRoute = () =>\r\n    navigate(`/login`, { state: { email: email } });\r\n\r\n  //checkVerificationTokenStatus\r\n  const handleVerificationToken = async () => {\r\n    dispatch(setLoading(true));\r\n    let params = {\r\n      params: {\r\n        verificationToken: paramsFromUrl.verificationToken,\r\n      },\r\n    };\r\n    const response = await appapi.post(`/auth/verifyEmail`, {}, params);\r\n    if (response.ok) {\r\n      const data = response.data;\r\n      dispatch(setLoading(false));\r\n      setMessage({\r\n        status: data.status,\r\n        msg: data.message,\r\n      });\r\n      setEmail(data?.data?.emailId);\r\n    } else {\r\n      dispatch(setLoading(false));\r\n      // showmessage(`Something Went Wrong!`, 2000, 'error')\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleVerificationToken();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"FinalizeContainer\"\r\n      style={{\r\n        padding: isMobile ? \"16px\" : \"0\",\r\n        minHeight: isMobile ? \"auto\" : \"100vh\",\r\n      }}\r\n    >\r\n      {isMobile ? (\r\n        <div\r\n          className=\"mobileViewContainer\"\r\n          style={{ minHeight: \"calc(100vh - 32px)\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${mobilewavybg})`,\r\n              minHeight: \"calc(100vh - 32px)\",\r\n              backgroundPosition: \"center bottom\",\r\n              backgroundRepeat: \"no-repeat\",\r\n            }}\r\n          >\r\n            <div className=\"logoImg\" style={{ marginLeft: \"8px\" }}>\r\n              <img alt=\"dizLogo\" src={dizlogoMobile} />\r\n            </div>\r\n            {message.status ? (\r\n              <div className=\"innerContainer\" style={{ marginTop: \"240px\" }}>\r\n                <Stack>\r\n                  <Typography\r\n                    className=\"fw-bold ff-Roboto createHeading\"\r\n                    color={colors.primaryTxt}\r\n                  >\r\n                    {\" \"}\r\n                    {message.status\r\n                      ? message.status === \"success\"\r\n                        ? \"Successful!\"\r\n                        : \"Failed!\"\r\n                      : \"\"}{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    className=\"fs-12 ff-Roboto fw-regular\"\r\n                    color={colors.blackMain}\r\n                    style={{ marginBottom: \"6px\" }}\r\n                  >\r\n                    {message.msg}\r\n                  </Typography>\r\n                  <Button\r\n                    sx={{\r\n                      ...buttonStyle1,\r\n                      textTransform: \"capitalize\",\r\n                      marginBottom: \"0\",\r\n                    }}\r\n                    onClick={onClickLoginRoute}\r\n                    type=\"submit\"\r\n                  >\r\n                    Go Back To Login\r\n                  </Button>\r\n                </Stack>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Stack\r\n          style={{ maxWidth: \"1368px\", margin: \"auto\", minHeight: \"758.64px\" }}\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack className=\"leftStack\" style={{ width: \"100%\" }}>\r\n            <div className=\"logoImg\">\r\n              <img\r\n                style={{ visibility: \"hidden\" }}\r\n                alt=\"dizLogo\"\r\n                src={diztextlogo}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"detailContainer\"\r\n              style={{ backgroundImage: `url(${wavesbg})` }}\r\n            ></div>\r\n            <Stack className=\"formSubmittedStyle\">\r\n              <div className=\"logoImg\">\r\n                <img alt=\"dizLogo\" src={diztextlogo} />\r\n              </div>\r\n              {message.status ? (\r\n                <div style={{ marginTop: \"22.916666666667vh\" }}>\r\n                  <Stack>\r\n                    <Typography\r\n                      className=\"fw-bold ff-Roboto createHeading\"\r\n                      color={colors.primaryTxt}\r\n                    >\r\n                      {\" \"}\r\n                      {message.status\r\n                        ? message.status === \"success\"\r\n                          ? \"Successful!\"\r\n                          : \"Failed!\"\r\n                        : \"\"}{\" \"}\r\n                    </Typography>\r\n                    <Typography\r\n                      className=\"fs-12 ff-Roboto fw-regular\"\r\n                      color={colors.blackMain}\r\n                      style={{ marginBottom: \"6px\" }}\r\n                    >\r\n                      {message.msg}\r\n                    </Typography>\r\n                    <Button\r\n                      sx={{\r\n                        ...buttonStyle1,\r\n                        textTransform: \"capitalize\",\r\n                        marginBottom: \"0\",\r\n                      }}\r\n                      onClick={onClickLoginRoute}\r\n                      type=\"submit\"\r\n                    >\r\n                      Go Back To Login\r\n                    </Button>\r\n                  </Stack>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      )}\r\n      {isMobile ? (\r\n        <Stack\r\n          className=\"footer\"\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack className=\"socialContainer\" direction=\"row\">\r\n            {<SocialCard />}\r\n          </Stack>\r\n          <Typography className=\"fs-10 ff-Roboto fw-medium black dizcopyrights\">\r\n            © 2022 Do It Zero Inc.\r\n          </Typography>\r\n        </Stack>\r\n      ) : (\r\n        <Stack className=\"footerWeb\">\r\n          <Stack\r\n            className=\"socialContainer flex-justifycenter\"\r\n            style={{\r\n              margin: \"3.125vh auto 3.125vh\",\r\n            }}\r\n            direction=\"row\"\r\n          >\r\n            {<SocialCard />}\r\n          </Stack>\r\n          <Typography className=\"fs-10 ff-Roboto fw-medium black dizcopyrights\">\r\n            © 2022 Do It Zero Inc.\r\n          </Typography>\r\n        </Stack>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["FinalizeSignup","navigate","useNavigate","dispatch","useDispatch","isMobile","useMediaQuery","paramsFromUrl","useParams","useState","status","msg","message","setMessage","email","setEmail","onClickLoginRoute","state","handleVerificationToken","setLoading","params","verificationToken","appapi","response","ok","data","emailId","useEffect","className","style","padding","minHeight","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","marginLeft","alt","src","dizlogoMobile","marginTop","Stack","Typography","color","colors","marginBottom","Button","sx","buttonStyle1","textTransform","onClick","type","maxWidth","margin","direction","justifyContent","width","visibility","diztextlogo","wavesbg","SocialCard"],"sourceRoot":""}