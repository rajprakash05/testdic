{"version":3,"file":"static/js/165.a16a8eeb.chunk.js","mappings":"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","sources":["pages/Auth/resetPassword/ResetPassword.js"],"sourcesContent":["import './ResetPassword.scss';\r\nimport React, { useState } from 'react';\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { TextField, Button, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { showmessage } from '../../../utils/toastr';\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg';\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport { colors } from '../../../utils/colors';\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport SocialCard from '../../../components/SocialCard';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your Email')\r\n        .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n        .required('Email is Required'),\r\n})\r\n\r\nexport default function ResetPassword() {\r\n    const navigate = useNavigate();\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n    const dispatch = useDispatch()\r\n\r\n    const [data, setData] = useState({\r\n        email: '',\r\n    })\r\n    const [formSubmitted, SetFormSubmitted] = useState(false);\r\n    const [resend, SetResend] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: data,\r\n        validationSchema: validationSchema,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        onSubmit: (values) => {\r\n            setData(values)\r\n            resetPassword(values)\r\n        },\r\n    })\r\n\r\n    /**\r\n     * \r\n     * @param {email} obj \r\n     * This submit is for reseting password\r\n     */\r\n    const resetPassword = async (obj, resend = false) => {\r\n        console.log(obj);\r\n        dispatch(setLoading(true))\r\n        let params = {\r\n            params: {\r\n                emailId: obj?.email ? obj.email : data.email\r\n            }\r\n        }\r\n        const response = await appapi.post(`/auth/forgot-password`, {}, params);\r\n        if (response.ok) {\r\n            const data = response.data;\r\n            dispatch(setLoading(false))\r\n            if (data.status === 'success') {\r\n                showmessage(data.message)\r\n                if (resend === true) {\r\n                    SetResend(true)\r\n                }\r\n                SetFormSubmitted(true)\r\n            } else {\r\n                showmessage(data.message, 5000, 'error')\r\n            }\r\n        } else {\r\n            dispatch(setLoading(false))\r\n            showmessage(`Something Went Wrong!`, 5000, 'error')\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns Redirect to initial page which is login\r\n     */\r\n    const onClickLoginRoute = () => navigate(`/`)\r\n\r\n    //emailForm\r\n    const form = ({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => {\r\n        return (\r\n            <>\r\n                <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Reset Password </Typography>\r\n                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain}>\r\n                    Enter your registered email id to receive your password reset instructions.\r\n                </Typography>\r\n                <form style={{ minHeight: '484px' }} onSubmit={handleSubmit}>\r\n                    <Stack>\r\n                        <Stack className='mt-9'>\r\n                            <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Email</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='email'\r\n                                name='email'\r\n                                value={values.email.toLowerCase() || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                helperText={(touched.email || dirty.email) && errors.email}\r\n                            />\r\n                        </Stack>\r\n                        <Button sx={{ ...buttonStyle1, marginBottom: '0' }} disabled={!(dirty && isValid)} type='submit'>SEND</Button>\r\n                        <Stack direction='row' className='mt-16' justifyContent='center'>\r\n                            <Typography className='ff-OpenSans fw-regular fs-12' color={colors.gray}>Go back to </Typography>\r\n                            <Typography onClick={onClickLoginRoute} className='ff-OpenSans fw-bold fs-12' color={colors.primaryDark} style={{ marginLeft: '7px', cursor: 'pointer' }}>Login</Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const formSubmittedContent = () => {\r\n        return (\r\n            <>\r\n                <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Successful! </Typography>\r\n                <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain}>\r\n                    Your request has been submitted successfully. Please check your email for further instructions.\r\n                </Typography>\r\n                {\r\n                    resend ? '' :\r\n                        <Stack direction='row' style={{ marginTop: '7px' }} spacing={0.5}>\r\n                            <Typography className='ff-OpenSans fw-regular fs-12' color={colors.gray}>Click here to</Typography>\r\n                            <Typography onClick={() => resetPassword({}, true)} className='ff-OpenSans fw-bold fs-12' color={colors.primaryDark} style={{ cursor: 'pointer' }}>Resend</Typography>\r\n                            <Typography className='ff-OpenSans fw-regular fs-12' color={colors.gray}>mail</Typography>\r\n                        </Stack>\r\n                }\r\n                <Button sx={{ ...buttonStyle1, marginBottom: '0', textTransform: 'capitalize', width: '100%' }} onClick={onClickLoginRoute} type='submit'>Go Back To Login</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='resetContainer' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n            {\r\n                isMobile ?\r\n                    <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n                        <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n                            <div className='logoImg'>\r\n                                <img alt='dizLogo' src={diztextlogo} />\r\n                            </div>\r\n                            <div className='innerContainer' style={{ marginTop: formSubmitted ? '240px' : '160px' }}>\r\n                                {\r\n                                    formSubmitted ?\r\n                                        <>\r\n                                            {formSubmittedContent()}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {form({ ...formik })}\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '758.64px' }} direction='row' justifyContent='space-between'>\r\n                        <Stack className='leftStack' style={{ width: '100%' }}>\r\n                            <div className='logoImg'>\r\n                                <img style={{ visibility: 'hidden' }} alt='dizLogo' src={diztextlogo} />\r\n                            </div>\r\n                            <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                            </div>\r\n                            <Stack className='formSubmittedStyle'>\r\n                                <div className='logoImg'>\r\n                                    <img alt='dizLogo' src={diztextlogo} />\r\n                                </div>\r\n                                <div style={{ marginTop: formSubmitted ? '22.916666666667vh' : '15.625vh' }}>\r\n                                    {\r\n                                        formSubmitted ?\r\n                                            <>\r\n                                                {formSubmittedContent()}\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                {form({ ...formik })}\r\n                                            </>\r\n                                    }\r\n                                </div>\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Stack>\r\n            }\r\n            {\r\n                isMobile ?\r\n                    <Stack className='footer' direction='row' justifyContent='space-between'>\r\n                        <Stack className='socialContainer' direction='row'>\r\n                            {\r\n                                <SocialCard />\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n                    </Stack>\r\n                    :\r\n                    <Stack className='footerWeb'>\r\n                        <Stack className='socialContainer flex-justifycenter' style={{\r\n                            margin: '3.125vh auto 3.125vh'\r\n                        }} direction='row'>\r\n                            {\r\n                                <SocialCard />\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n                    </Stack>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"],"names":["validationSchema","yup","email","matches","required","ResetPassword","navigate","useNavigate","isMobile","useMediaQuery","dispatch","useDispatch","useState","data","setData","formSubmitted","SetFormSubmitted","resend","SetResend","formik","useFormik","enableReinitialize","initialValues","validateOnBlur","validateOnChange","onSubmit","values","resetPassword","obj","console","log","setLoading","params","emailId","appapi","response","ok","status","showmessage","message","onClickLoginRoute","form","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","Typography","className","color","colors","style","minHeight","Stack","TextField","fullWidth","id","name","value","toLowerCase","onChange","onBlur","error","Boolean","helperText","Button","sx","buttonStyle1","marginBottom","disabled","type","direction","justifyContent","onClick","marginLeft","cursor","formSubmittedContent","marginTop","spacing","textTransform","width","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","alt","src","diztextlogo","maxWidth","margin","visibility","wavesbg","SocialCard"],"sourceRoot":""}