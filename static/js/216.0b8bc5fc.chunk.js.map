{"version":3,"file":"static/js/216.0b8bc5fc.chunk.js","mappings":"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","sources":["components/EnchanedTableHeader.js","components/HorizontalScroll/HorizontalScroll.js","components/HorizontalScroll/useDrag.js","components/TablePaginationActions.js","pages/Layout/Analytics/components/AnalyticsHeader/AnalyticsHeader.js","pages/Layout/Analytics/components/EcoAnalyticsCard/EcoAnalyticsCard.js","pages/Layout/Analytics/components/Chart/LineChart.js","pages/Layout/Analytics/components/Chart/BarChart.js","pages/Layout/Analytics/components/AnalyticsChart/AnalyticsChart.js","pages/Layout/Analytics/components/CampaignSection/CampaignTable.js","pages/Layout/Analytics/components/CampaignSection/CampaignSection.js","pages/Layout/Analytics/Analytics.js"],"sourcesContent":["import React from 'react';\r\nimport { colors } from '../utils/colors';\r\nimport { TableHead, TableRow, TableCell, Typography, Checkbox, IconButton, Stack } from '@mui/material'\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nexport default function EnchanedTableHeader({ headerCell, checkbox = false, initialWidth, handleChangeAll, allSelected, preference = false, infoIconLast = false }) {\r\n\r\n    const handleChange = (event, value) => {\r\n        handleChangeAll(event, value)\r\n    }\r\n\r\n    return (\r\n        <TableHead className='mainUserTableHead'>\r\n            <TableRow sx={{\r\n                \"& th\": {\r\n                    backgroundColor: colors.secondary\r\n                }\r\n            }}>\r\n                {\r\n                    checkbox ?\r\n                        <TableCell style={{ width: 'calc(100% - 96.25%)', textAlign: 'center' }}>\r\n                            <Checkbox onChange={handleChange} indeterminate={allSelected} />\r\n                        </TableCell> :\r\n                        <TableCell style={{ width: `calc(100% - ${initialWidth})`, textAlign: 'center', color: colors.primaryDark }}>\r\n                            #\r\n                        </TableCell>\r\n                }\r\n                {\r\n                    headerCell?.map((header, index) => (\r\n                        <TableCell key={index} style={{ width: header.width }}>\r\n                            <Stack\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                justifyContent={\r\n                                    index === headerCell.length - 1\r\n                                        ? \"space-between\"\r\n                                        : \"flex-start\"\r\n                                }\r\n                            >\r\n                                <Stack direction=\"row\"\r\n                                    alignItems=\"center\"\r\n                                    justifyContent={\r\n                                        index === headerCell.length - 1\r\n                                            ? \"space-between\"\r\n                                            : \"flex-start\"\r\n                                    }\r\n                                >\r\n                                    <Typography className='ff-Roboto fs-12 fw-medium' style={{ color: colors.primaryDark }}>\r\n                                        {header.name}\r\n                                    </Typography>\r\n                                    {\r\n                                        infoIconLast === true && index === headerCell.length - 1 ?\r\n                                            <InfoOutlinedIcon style={{ marginLeft: '9px', color: 'rgb(73, 96, 115, 0.5)', transform: 'scale(0.8)', cursor: 'pointer' }} />\r\n                                            : ''\r\n                                    }\r\n                                </Stack>\r\n\r\n                                {preference === true && index === headerCell.length - 1 && (\r\n                                    <IconButton\r\n                                        style={{ padding: '0', marginRight: '8px', color: colors.primaryDark }}\r\n                                        aria-label=\"moreColumn\"\r\n                                        component=\"label\"\r\n                                    >\r\n                                        <MoreVertIcon style={{ color: colors.gray }} />\r\n                                    </IconButton>\r\n                                )}\r\n                            </Stack>\r\n\r\n                        </TableCell>\r\n                    ))\r\n                }\r\n            </TableRow>\r\n        </TableHead>\r\n    )\r\n}\r\n","import useDrag from \"./useDrag\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\n\r\nfunction onWheel(apiObj, ev){\r\n    const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;\r\n  \r\n    if (isThouchpad) {\r\n      ev.stopPropagation();\r\n      return;\r\n    }\r\n  \r\n    if (ev.deltaY < 0) {\r\n      apiObj.scrollNext();\r\n    } else if (ev.deltaY > 0) {\r\n      apiObj.scrollPrev();\r\n    }\r\n  }\r\n\r\nexport default function HorizontalScroll({children}) {\r\n  const { dragStart, dragStop, dragMove, dragging } = useDrag();\r\n  const handleDrag =\r\n    ({ scrollContainer }) =>\r\n    (ev) =>\r\n      dragMove(ev, (posDiff) => {\r\n        if (scrollContainer.current) {\r\n          scrollContainer.current.scrollLeft += posDiff;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <div onMouseLeave={dragStop}>\r\n              <ScrollMenu \r\n              onWheel={onWheel}\r\n              onMouseDown={() => dragStart}\r\n              onMouseUp={() => dragStop}\r\n              onMouseMove={handleDrag}\r\n              >\r\n                {children}\r\n              </ScrollMenu>\r\n        </div>\r\n      );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function useDrag() {\r\n    const [clicked, setClicked] = React.useState(false);\r\n    const [dragging, setDragging] = React.useState(false);\r\n    const position = React.useRef(0);\r\n\r\n    const dragStart = React.useCallback((ev) => {\r\n        position.current = ev.clientX;\r\n        setClicked(true);\r\n    }, []);\r\n\r\n    const dragStop = React.useCallback(\r\n        () =>\r\n        // NOTE: need some delay so item under cursor won't be clicked\r\n        window.requestAnimationFrame(() => {\r\n            setDragging(false);\r\n            setClicked(false);\r\n        }), []\r\n    );\r\n\r\n    const dragMove = (ev, cb) => {\r\n        const newDiff = position.current - ev.clientX;\r\n\r\n        const movedEnough = Math.abs(newDiff) > 5;\r\n\r\n        if (clicked && movedEnough) {\r\n            setDragging(true);\r\n        }\r\n\r\n        if (dragging && movedEnough) {\r\n            position.current = ev.clientX;\r\n            cb(newDiff);\r\n        }\r\n    };\r\n\r\n    return {\r\n        dragStart,\r\n        dragStop,\r\n        dragMove,\r\n        dragging,\r\n        position,\r\n        setDragging\r\n    };\r\n}","import React, { useState, useEffect } from 'react'\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport { Box, useTheme, IconButton, TextField, MenuItem } from '@mui/material'\r\n\r\nexport default function TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const [pageArr, setPageArr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let totalPage = Math.ceil(count / rowsPerPage);\r\n        let arr = []\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            arr.push(i);\r\n        }\r\n        setPageArr(arr);\r\n    }, [count, rowsPerPage]);\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    const handlePageSelect = (event) => {\r\n        onPageChange(event, event.target.value - 1)\r\n    }\r\n\r\n    return (\r\n        <Box className='tablepagination' sx={{ flexShrink: 0, ml: 2.5 }}>\r\n            <div className='textFieldSelect'>\r\n                <TextField\r\n                    id='pageSelect'\r\n                    name='pageSelect'\r\n                    value={pageArr?.length > 0 ? page + 1 : ''}\r\n                    onChange={handlePageSelect}\r\n                    select\r\n                >\r\n                    {pageArr && pageArr.map((item) => (\r\n                        <MenuItem key={item} value={item}> {item} </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}","import './AnalyticsHeader.scss'\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, Menu, MenuItem, Box, FormControl, FormControlLabel, RadioGroup, Radio, Button } from '@mui/material'\r\nimport { buttonStyle4 } from '../../../../../utils/commonStyle';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport { reportSelect } from '../../../../../utils/commonUtils'\r\n\r\nexport default function AnalyticsHeader({ isMobile, colors, selectedOption, SetSelectedOption }) {\r\n\r\n    //Options menu\r\n    const [anchorEl, setAnchorEl] = useState(false);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <header className='AnalyticsheaderContainer' style={{ marginBottom: '8px' }}>\r\n            <Stack direction='row' justifyContent='space-between' alignItems={'center'}>\r\n                <Stack direction='row' alignItems='center'>\r\n                    <Typography className='ff-Roboto fw-medium text-upper' style={{ color: colors.blackMain, paddingTop: isMobile ? '17px' : '0' }}>\r\n                        REPORTS & ANALYTICS\r\n                    </Typography>\r\n                    <Box className='optionsSelectionStyle'\r\n                        id='resource-button'\r\n                        onClick={handleMenuOpen}\r\n                        aria-controls={open ? 'resource-menu' : undefined}\r\n                        aria-haspopup='true'\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                    >\r\n                        <Typography className='ff-Roboto fw-regular fs-12' style={{ color: colors.black, width: '72%', paddingLeft: '16px' }}>\r\n                            {selectedOption}\r\n                        </Typography>\r\n                        <KeyboardArrowDownIcon style={{ color: 'rgb(0, 0, 0, 0.3)' }} />\r\n                    </Box>\r\n                    <Menu className='reportBar' id='resource-menu' anchorEl={anchorEl} open={open}\r\n                        MenuListProps={{\r\n                            \"aria-labelledby\": 'resource-button',\r\n                        }}\r\n                        onClose={handleMenuClose}\r\n                        PaperProps={{\r\n                            style: {\r\n                                width: '176px',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {\r\n                            <FormControl>\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue={selectedOption}\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    {\r\n                                        reportSelect.map((item) => (\r\n                                            <MenuItem disableTouchRipple key={item.name} onClose={handleMenuClose} >\r\n                                                <FormControlLabel value={item.name}\r\n                                                    control={<Radio\r\n                                                        size=\"small\"\r\n                                                        sx={{\r\n                                                            color: colors.black,\r\n                                                            padding: '0 0 0 8px',\r\n                                                            '&.Mui-checked': {\r\n                                                                color: colors.black\r\n                                                            },\r\n                                                        }}\r\n                                                        onChange={() => SetSelectedOption(item.name)}\r\n                                                    />} label={item.name} />\r\n                                            </MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n\r\n                        }\r\n\r\n                    </Menu>\r\n                </Stack>\r\n\r\n                <div className='flex-aligncenter'>\r\n                    <Button sx={{ ...buttonStyle4, marginRight: '0', minWidth: '112px', width: '112px', height: '36px', textTransform: 'uppercase', borderRadius: '16px' }} className='ff-Roboto fw-regular fs-12' variant=\"contained\">\r\n                        Report\r\n                    </Button>\r\n                </div>\r\n            </Stack>\r\n        </header>\r\n    )\r\n}\r\n","import './EcoAnalyticsCard.scss';\r\nimport React from 'react';\r\nimport millify from \"millify\";\r\nimport { Stack, Typography } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\n\r\nexport default function EcoAnalyticsCard({ item, index, isMobile }) {\r\n\r\n    return (\r\n        <>\r\n            <Stack key={index} className='analyticsCard'>\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography style={{ width: '87px' }} className='ff-Roboto fs-14 fw-medium black'>\r\n                        {item.name}\r\n                    </Typography>\r\n                    {\r\n                        item.name === 'Total GHG Impact' ?\r\n                            <InfoOutlinedIcon style={{ color: 'rgb(73, 96, 115, 0.5)', transform: 'scale(0.8)', cursor: 'pointer' }} /> :\r\n                            <Typography className='ff-Roboto fs-10 fw-medium' color={colors.active}>\r\n                                {\r\n                                    item.slides ? item.slides : ''\r\n                                }\r\n                            </Typography>\r\n                    }\r\n                </Stack>\r\n                <Typography className='fs-32 ff-Roboto fw-bold' color={colors.primaryHover}>\r\n                    {millify(item.data)}\r\n                </Typography>\r\n            </Stack>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { faker } from '@faker-js/faker';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    type: \"chart\",\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n        legend: {\r\n            display: false,\r\n            position: \"top\"\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: \"Chart.js Line Chart\"\r\n        }\r\n    },\r\n    scales: {\r\n        y: {\r\n            display: false\r\n        },\r\n        x: {\r\n            grid: {\r\n                drawBorder: false,\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst labels = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            // label: 'Dataset 1',\r\n            data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            borderColor: \"#48B549\",\r\n            // backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            borderWidth: 1\r\n        }\r\n    ]\r\n};\r\n\r\nexport default function LineChart() {\r\n    return (\r\n        <Line options={options} data={data} />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { faker } from '@faker-js/faker';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    type: \"chart\",\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n        legend: {\r\n            display: false,\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: 'Chart.js Bar Chart',\r\n        },\r\n    },\r\n    scales: {\r\n        x: {\r\n            grid: {\r\n                display: false,\r\n                drawBorder: false,\r\n            },\r\n        },\r\n        y: {\r\n            display: false,\r\n            grid: {\r\n                display: false\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst labels = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            label: '',\r\n            data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\r\n            backgroundColor: 'rgb(55, 135, 201, 0.5)',\r\n            // barThickness: 48,\r\n            borderRadius: 4,\r\n            borderSkipped: false,\r\n        },\r\n    ],\r\n};\r\n\r\nexport default function BarChart() {\r\n    return (\r\n        <Bar options={options} data={data} />\r\n    )\r\n}\r\n","import './AnalyticsChart.scss';\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, TextField, MenuItem } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport { analyticData, barDataType } from '../../../../../utils/commonUtils';\r\nimport LineChart from '../Chart/LineChart';\r\nimport BarChart from '../Chart/BarChart';\r\n\r\nexport default function AnalyticsChart({ barType, setBarType, barData, setBarData }) {\r\n\r\n    const handleDataSelect = (e) => {\r\n        setBarData(e.target.value)\r\n    }\r\n\r\n    const handleChartType = (e) => {\r\n        setBarType(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Stack direction='row'>\r\n            {/**\r\n             * Input Section\r\n             */}\r\n            <Stack style={{ width: '232px' }}>\r\n                <Typography color={colors.blackMain} className='ff-Roboto fs-14 fw-medium'>Title of the Graph</Typography>\r\n                <Stack className='mt-13'>\r\n                    <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Data</Typography>\r\n                    <TextField\r\n                        fullWidth\r\n                        id='graphData'\r\n                        name='graphData'\r\n                        value={barData}\r\n                        onChange={(e) => handleDataSelect(e)}\r\n                        select\r\n                    >\r\n                        {analyticData.map((item) => (\r\n                            <MenuItem key={item.name} value={item.name}> {item.name} </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Stack>\r\n                <Stack className='mt-22'>\r\n                    <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Graph Type</Typography>\r\n                    <TextField\r\n                        fullWidth\r\n                        id='graphData'\r\n                        name='graphData'\r\n                        value={barType}\r\n                        onChange={(e) => handleChartType(e)}\r\n                        select\r\n                    >\r\n                        {barDataType.map((item) => (\r\n                            <MenuItem key={item.type} value={item.type}> {item.name} </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </Stack>\r\n            </Stack>\r\n            {/**\r\n             * Chart Section\r\n             */}\r\n            <div style={{ marginLeft: '12px', width: 'calc(100% - 244px)', height: '250px' }}>\r\n                {\r\n                    barType === 'bar' ?\r\n                        <BarChart /> :\r\n                        <LineChart />\r\n                }\r\n            </div>\r\n        </Stack>\r\n    )\r\n}\r\n","import './CampaignSection.scss'\r\nimport React, { useState } from 'react';\r\nimport EnchanedTableHeader from '../../../../../components/EnchanedTableHeader';\r\nimport { Typography, TableContainer, Table, TableBody, TableRow, TableCell, Checkbox } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport millify from 'millify';\r\n\r\nconst headerCell = [\r\n    {\r\n        name: 'Campaign Name',\r\n        width: '15%'\r\n    },\r\n    {\r\n        name: 'Total Participants',\r\n        width: '11.875%'\r\n    },\r\n    {\r\n        name: 'Total Actions',\r\n        width: '10.875%'\r\n    },\r\n    {\r\n        name: 'Eco-points Awarded',\r\n        width: '13.125%'\r\n    },\r\n    {\r\n        name: 'Average Actions',\r\n        width: '10.625%'\r\n    },\r\n    {\r\n        name: 'Average Eco-Points',\r\n        width: '10.625%',\r\n    },\r\n    {\r\n        name: 'Result',\r\n        width: '10.875%'\r\n    },\r\n    {\r\n        name: 'Carbon impact',\r\n        width: '13.25%'\r\n    }\r\n]\r\n\r\nexport default function CampaignTable({ page, rowsPerPage, allSelected, handleChangeAll, handleCheckedChange }) {\r\n\r\n    return (\r\n        <div className='CampaignTable'>\r\n            <div className='tableContainer'>\r\n                <TableContainer sx={{ maxHeight: 'calc(100vh - 128px)' }}>\r\n                    <Table style={{ tableLayout: 'fixed' }} stickyHeader aria-label=\"sticky table\" sx={{ width: '100%' }}>\r\n                        <EnchanedTableHeader\r\n                            headerCell={headerCell}\r\n                            handleChangeAll={((event, value) => handleChangeAll(event, value))}\r\n                            allSelected={allSelected}\r\n                            checkbox={true}\r\n                            preference={true}\r\n                            infoIconLast={true}\r\n                        />\r\n                        <TableBody className='mainUserBodyTable'>\r\n                            {\r\n                                [1, 2, 3].map((item, index) => (\r\n                                    <TableRow className='tableRowHover' key={index}>\r\n                                        <TableCell align='center' style={{ width: 'calc(100% - 96.25%)' }} className={item?.isSelected ? 'selectedStyle tablecellonHover' : 'tablecellonHover'}>\r\n                                            <Checkbox checked={item.isSelected}\r\n                                                onChange={() => handleCheckedChange(item)} className={item?.isSelected ? 'checkedItems' : 'checkboxonHover'} />\r\n                                            <Typography className={(item?.isSelected ? 'indexChecked ' : 'indexStyle ') + 'ff-Roboto fs-12 fw-regular black'}>\r\n                                                {(rowsPerPage * (page)) + index + 1}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                Name of the Eco-initiative\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                245\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                100\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                {millify(3500000)}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                5/user\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                200/user\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                5M Clothes Donated\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell style={{ width: 'calc(100% - 85%)' }}>\r\n                                            <Typography className='fs-12 ff-Roboto fw-regular ellipseStyle black'>\r\n                                                10 Tons\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport CampaignTable from './CampaignTable';\r\nimport { TablePagination, useMediaQuery, Typography, Stack } from '@mui/material';\r\nimport { colors } from '../../../../../utils/colors';\r\nimport TablePaginationActions from '../../../../../components/TablePaginationActions';\r\n\r\nexport default function CampaignSection() {\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [length, setLength] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n    const [backendpage, setBackendPage] = useState(1)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [allSelected, setAllSelected] = useState(false);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setBackendPage(newPage + 1)\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setBackendPage(1)\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeAll = (event, value) => {\r\n        console.log(value);\r\n        setAllSelected(!allSelected)\r\n    }\r\n\r\n    const handleCheckedChange = (item) => {\r\n        console.log(item);\r\n    }\r\n\r\n    return (\r\n        <div className='inputFormStyle'>\r\n            {/**\r\n               * Top Toolbar\r\n               */}\r\n            <header className={isMobile && 'headerMobile'} style={{ marginBottom: '8px' }}>\r\n                <Stack direction='row' justifyContent='space-between' alignItems={'center'}>\r\n                    <Typography className='ff-Roboto fw-medium text-upper' style={{ color: colors.blackMain, paddingTop: isMobile ? '17px' : '0' }}>\r\n                        Campaign\r\n                    </Typography>\r\n                    <div className='flex-aligncenter'>\r\n                        {\r\n                            isMobile ? null :\r\n                                <TablePagination\r\n                                    rowsPerPageOptions={[]}\r\n                                    count={length ? length : 1}\r\n                                    rowsPerPage={rowsPerPage ? rowsPerPage : 10}\r\n                                    page={page ? page : 0}\r\n                                    onPageChange={handleChangePage}\r\n                                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Stack>\r\n            </header>\r\n            <CampaignTable\r\n                length={length}\r\n                page={page}\r\n                rowsPerPage={rowsPerPage}\r\n                allSelected={allSelected}\r\n                handleChangeAll={handleChangeAll}\r\n                handleCheckedChange={handleCheckedChange}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n","import './Analytics.scss';\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, useMediaQuery, Button, } from '@mui/material';\r\nimport { colors } from '../../../utils/colors';\r\nimport { analyticData } from '../../../utils/commonUtils';\r\nimport AnalyticsHeader from './components/AnalyticsHeader/AnalyticsHeader';\r\nimport EcoAnalyticsCard from './components/EcoAnalyticsCard/EcoAnalyticsCard';\r\nimport AnalyticsChart from './components/AnalyticsChart/AnalyticsChart';\r\nimport CampaignSection from './components/CampaignSection/CampaignSection';\r\nimport HorizontalScroll from '../../../components/HorizontalScroll/HorizontalScroll';\r\n\r\nexport default function Analytics() {\r\n\r\n    //States\r\n    const [barType, setBarType] = useState('bar');\r\n    const [barData, setBarData] = useState('Trees planted');\r\n\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [selectedOption, SetSelectedOption] = useState('Monthly');\r\n\r\n    return (\r\n        <div className='Analytics'>\r\n            {/**\r\n             * Top Toolbar\r\n             */}\r\n            <AnalyticsHeader isMobile={isMobile} colors={colors} selectedOption={selectedOption} SetSelectedOption={(event) => SetSelectedOption(event)} />\r\n            <div className='innerDivPadding'>\r\n                {/**\r\n                 * Eco Analytics Cards\r\n                 */}\r\n                <div >\r\n                    <HorizontalScroll>\r\n                        {\r\n                            analyticData?.map((item, index) => (\r\n                                <EcoAnalyticsCard item={item} index={index} isMobile={isMobile} />\r\n                            ))\r\n                        }\r\n                    </HorizontalScroll>\r\n                </div>\r\n                {/**\r\n                 * Chart Data\r\n                 */}\r\n                <div className='chartSection'>\r\n                    <AnalyticsChart\r\n                        barType={barType}\r\n                        setBarType={((e) => setBarType(e))}\r\n                        barData={barData}\r\n                        setBarData={((e) => setBarData(e))}\r\n                    />\r\n                </div>\r\n                {/**\r\n                 * Campaigns List\r\n                 */}\r\n                <div className='CampaignSection'>\r\n                    <CampaignSection />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["EnchanedTableHeader","headerCell","checkbox","initialWidth","handleChangeAll","allSelected","preference","infoIconLast","className","sx","backgroundColor","colors","style","width","textAlign","onChange","event","value","indeterminate","color","map","header","index","direction","alignItems","justifyContent","length","name","marginLeft","transform","cursor","padding","marginRight","component","onWheel","apiObj","ev","Math","abs","deltaX","deltaY","stopPropagation","scrollNext","scrollPrev","HorizontalScroll","children","React","clicked","setClicked","dragging","setDragging","position","dragStart","current","clientX","dragStop","window","requestAnimationFrame","dragMove","cb","newDiff","movedEnough","useDrag","onMouseLeave","ScrollMenu","onMouseDown","onMouseUp","onMouseMove","scrollContainer","posDiff","scrollLeft","TablePaginationActions","props","theme","useTheme","count","page","rowsPerPage","onPageChange","useState","pageArr","setPageArr","useEffect","totalPage","ceil","arr","i","push","flexShrink","ml","id","target","select","item","onClick","disabled","max","AnalyticsHeader","isMobile","selectedOption","SetSelectedOption","anchorEl","setAnchorEl","open","Boolean","handleMenuClose","marginBottom","Stack","Typography","blackMain","paddingTop","Box","currentTarget","undefined","black","paddingLeft","KeyboardArrowDown","Menu","MenuListProps","onClose","PaperProps","FormControl","RadioGroup","defaultValue","reportSelect","MenuItem","disableTouchRipple","FormControlLabel","control","Radio","size","label","Button","buttonStyle4","minWidth","height","textTransform","borderRadius","variant","EcoAnalyticsCard","InfoOutlined","slides","millify","data","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","type","responsive","maintainAspectRatio","plugins","legend","display","title","text","scales","y","x","grid","drawBorder","labels","datasets","faker","min","borderColor","borderWidth","LineChart","BarElement","borderSkipped","BarChart","AnalyticsChart","barType","setBarType","barData","setBarData","TextField","fullWidth","e","handleDataSelect","analyticData","handleChartType","barDataType","CampaignTable","handleCheckedChange","TableContainer","maxHeight","Table","tableLayout","stickyHeader","TableBody","TableRow","TableCell","align","isSelected","Checkbox","checked","CampaignSection","useMediaQuery","setPage","setBackendPage","setRowsPerPage","setAllSelected","TablePagination","rowsPerPageOptions","newPage","onRowsPerPageChange","parseInt","ActionsComponent","console","log","Analytics"],"sourceRoot":""}