{"version":3,"file":"static/js/382.7a4fa412.chunk.js","mappings":"4LAKe,SAASA,IACpB,OACIC,EAAAA,GAAAA,KAAc,SAACC,EAAMC,GAAP,OACV,UAAC,IAAD,CAAmBC,UAAU,MAA7B,WACI,gBAAKC,IAAKH,EAAKI,MAAOC,IAAKL,EAAKM,QAChC,UAAC,IAAD,CAAOC,UAAU,UAAjB,WACI,SAAC,IAAD,CAAYA,UAAU,4BAA4BC,MAAO,CAAEC,MAAOC,EAAAA,EAAAA,OAAlE,SACKV,EAAKI,SAEV,SAAC,IAAD,CAAYG,UAAU,6BAA6BC,MAAO,CAAEC,MAAOC,EAAAA,EAAAA,eAAuBC,MAAO,SAAjG,SACKX,EAAKY,gBAPNX,EADF,GAcrB,C,4XCEKY,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,GACK,oBACPE,QAAQ,mCAAoC,oBAC5CC,SAAS,qBACTC,OACLC,KAAML,EAAAA,GACM,mBACPM,IAAI,EAAG,qCACPC,IAAI,IAAK,uCACTJ,SAAS,oBACTC,OACLI,aAAcR,EAAAA,GACF,yBACPG,SAAS,4BACTI,IAAI,GAAI,sCACRH,OACLK,SAAUT,EAAAA,GACE,uBAGPE,QAAQ,yEAA0E,wHAClFC,SAAS,wBACTC,OACLM,kBAAmBV,EAAAA,KAAWW,MAAM,EAAC,GAAO,2CAGjC,SAASC,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,GAAc,sBAE/B,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,CACnCK,OAAQ,GACRC,IAAK,KAFT,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,GAAwBR,EAAAA,EAAAA,UAAS,CAC7BlB,MAAO,GACPI,KAAM,GACNG,aAAc,GACdC,SAAU,GACVC,mBAAmB,IALvB,eAAOkB,EAAP,KAQMC,GARN,MAQeC,EAAAA,EAAAA,IAAU,CACrBC,oBAAoB,EACpBC,cAAeJ,EACf7B,iBAAkBA,EAClBkC,gBAAgB,EAChBC,kBAAkB,EAClBC,SAAU,SAACC,GACPC,EAAOD,EACV,KAOCE,EAAoB,kBAAMvB,EAAS,IAAf,EAMpBsB,EAAM,yCAAG,WAAOE,GAAP,uFACX1B,GAAS2B,EAAAA,EAAAA,KAAW,IAChBC,EAAU,CACVC,QAASH,EAAItC,MACbI,KAAMkC,EAAIlC,KACVI,SAAU8B,EAAI9B,SACdD,aAAc+B,EAAI/B,cANX,SAQYmC,EAAAA,EAAAA,KAAA,eAA4BF,GARxC,QAQLG,EARK,QASEC,IACHjB,EAAOgB,EAAShB,KACtBf,GAAS2B,EAAAA,EAAAA,KAAW,IACA,YAAhBZ,EAAKJ,QACLG,EAAW,CACPH,OAAM,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAMJ,OACdC,IAAG,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAMF,UAEfH,GAAiB,KAEjBI,EAAW,CACPH,OAAQI,EAAKJ,OACbC,IAAKG,EAAKF,WAEdoB,EAAAA,EAAAA,GAAYlB,EAAKF,QAAS,IAAM,YAGpCb,GAAS2B,EAAAA,EAAAA,KAAW,KACpBM,EAAAA,EAAAA,GAAY,wBAAyB,IAAM,UA3BpC,2CAAH,sDA+BNC,EAAa,SAAC,GAAyF,IAAvFC,EAAsF,EAAtFA,aAAcZ,EAAwE,EAAxEA,OAAQa,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC5F,OACI,iCACI,SAACC,EAAA,EAAD,CAAY9D,UAAU,kCAAkCE,MAAOC,EAAAA,EAAAA,WAA/D,wBACA,iBAAMuC,SAAUa,EAActD,MAAO,CAAE8D,UAAWvC,EAAW,QAAU,WAAvE,UACI,UAACwC,EAAA,EAAD,YACI,UAACA,EAAA,EAAD,CAAOhE,UAAU,QAAjB,WACI,SAAC8D,EAAA,EAAD,CAAY9D,UAAU,iCAAiCE,MAAOC,EAAAA,EAAAA,UAA9D,oBACA,SAAC8D,EAAA,EAAD,CACIC,WAAS,EACTC,GAAG,QACHvD,KAAK,QACLwD,MAAOzB,EAAOnC,MAAM6D,cAAcC,QAAQ,OAAQ,KAAO,GACzDC,SAAUf,EACVgB,OAAQb,EACRc,MAAOf,EAAQlD,OAASkE,QAAQjB,EAAOjD,OACvCmE,YAAajB,EAAQlD,OAASqD,EAAMrD,QAAUiD,EAAOjD,YAG7D,UAACwD,EAAA,EAAD,CAAOhE,UAAU,QAAjB,WACI,SAAC8D,EAAA,EAAD,CAAY9D,UAAU,iCAAiCE,MAAOC,EAAAA,EAAAA,UAA9D,mBACA,SAAC8D,EAAA,EAAD,CACIC,WAAS,EACTC,GAAG,OACHvD,KAAK,OACLwD,MAAOzB,EAAO/B,KAAK0D,QAAQ,OAAQ,KAAO,GAC1CC,SAAUf,EACVgB,OAAQb,EACRc,MAAOf,EAAQ9C,MAAQ8D,QAAQjB,EAAO7C,MACtC+D,YAAajB,EAAQ9C,MAAQiD,EAAMjD,OAAS6C,EAAO7C,WAG3D,UAACoD,EAAA,EAAD,CAAOhE,UAAU,QAAjB,WACI,SAAC8D,EAAA,EAAD,CAAY9D,UAAU,iCAAiCE,MAAOC,EAAAA,EAAAA,UAA9D,2BACA,SAAC8D,EAAA,EAAD,CACIC,WAAS,EACTC,GAAG,eACHvD,KAAK,eACLwD,MAAOzB,EAAO5B,aAAauD,QAAQ,OAAQ,KAAO,GAClDC,SAAUf,EACVgB,OAAQb,EACRc,MAAOf,EAAQ3C,cAAgB2D,QAAQjB,EAAO1C,cAC9C4D,YAAajB,EAAQ3C,cAAgB8C,EAAM9C,eAAiB0C,EAAO1C,mBAG3E,UAACiD,EAAA,EAAD,CAAOhE,UAAU,sBAAjB,WACI,gBAAKC,MAAO,CAAE2E,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAA5E,UACI,SAAChB,EAAA,EAAD,CAAY9D,UAAU,iCAAiCE,MAAOC,EAAAA,EAAAA,UAA9D,yBAEJ,SAAC8D,EAAA,EAAD,CACIC,WAAS,EACTC,GAAG,WACHvD,KAAK,WACLwD,MAAOzB,EAAO3B,SAASL,QAAU,GACjC4D,SAAUf,EACVgB,OAAQb,EACRoB,KAAMpD,EAAa,OAAS,WAC5B8C,MAAOf,EAAQ1C,UAAY0D,QAAQjB,EAAOzC,UAC1C2D,YAAajB,EAAQ1C,UAAY6C,EAAM7C,WAAayC,EAAOzC,SAC3DhB,UAAW2C,EAAO3B,SAAW,uBAAyB,qBACtDgE,WAAY,CACRC,cACI,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UAEQ,SAACC,EAAA,EAAD,CAAYC,QAAS,kBAAMzD,GAAeD,EAArB,EAArB,SACKA,GAAa,SAAC2D,EAAA,EAAD,KAA6B,SAACC,EAAA,EAAD,eAQvE,SAACvB,EAAA,EAAD,CAAOhE,UAAU,sBAAjB,UACI,SAACwF,EAAA,EAAD,CACI9E,UAAQ,EACR+E,SACI,SAACC,EAAA,EAAD,CACIC,GAAI,CACA,gBAAiB,CACbzF,MAAOC,EAAAA,EAAAA,aAGfgE,GAAG,oBACHvD,KAAK,oBACLgF,UAAWjD,EAAO1B,kBAClBsD,SAAUf,IAElBqC,OAAO,SAAC/B,EAAA,EAAD,CAAY9D,UAAU,mCAAtB,qEAGf,SAAC8F,EAAA,EAAD,CAAQH,GAAII,EAAAA,GAAcC,WAAYnC,GAASD,GAAUmB,KAAK,SAA9D,sBACA,UAACf,EAAA,EAAD,CAAOrE,UAAU,MAAMK,UAAU,QAAQ6E,eAAe,SAAxD,WACI,SAACf,EAAA,EAAD,CAAY9D,UAAU,+BAA+BE,MAAOC,EAAAA,EAAAA,KAA5D,wCACA,SAAC2D,EAAA,EAAD,CAAYuB,QAASxC,EAAmB7C,UAAU,4BAA4BE,MAAOC,EAAAA,EAAAA,YAAoBF,MAAO,CAAEgG,WAAY,OAAQC,OAAQ,WAA9I,kCAMvB,EAEKC,EAAsB,WACxB,OACI,+BACI,UAACnC,EAAA,EAAD,YACI,UAACF,EAAA,EAAD,CAAY9D,UAAU,kCAAkCE,MAAOC,EAAAA,EAAAA,WAA/D,cAAuG,YAAnB8B,EAAQF,OAAuB,cAAgB,UAAnI,SACA,SAAC+B,EAAA,EAAD,CAAY9D,UAAU,6BAA6BE,MAAOC,EAAAA,EAAAA,UAAkBF,MAAO,CAAEmG,aAAc,OAAnG,SACKnE,EAAQD,OAEb,SAAC8D,EAAA,EAAD,CAAQH,IAAE,kBAAOI,EAAAA,IAAP,IAAqBM,cAAe,aAAcD,aAAc,MAAOf,QAASxC,EAAmBkC,KAAK,SAAlH,kCAIf,EAED,OACI,iBAAK/E,UAAU,kBAAkBC,MAAO,CAAEqG,QAAS9E,EAAW,OAAS,IAAKuC,UAAWvC,EAAW,OAAS,SAA3G,WAEQ,8BAEQK,GACI,8BAEQL,GACI,gBAAKxB,UAAU,sBAAsBC,MAAO,CAAE8D,UAAW,sBAAzD,UACI,iBAAK9D,MAAO,CAAEsG,gBAAgB,OAAD,OAASC,EAAAA,EAAT,KAA0BzC,UAAW,qBAAsB0C,mBAAoB,gBAAiBC,iBAAkB,aAA/I,WACI,gBAAK1G,UAAU,UAAf,UACI,gBAAKJ,IAAI,UAAUE,IAAK6G,EAAAA,OAE5B,gBAAK3G,UAAU,iBAAiBC,MAAO,CAAE2G,UAAW,SAApD,SACKT,YAKb,SAACnC,EAAA,EAAD,CAAO/D,MAAO,CAAE4G,SAAU,SAAUC,OAAQ,QAAUnH,UAAU,MAAMkF,eAAe,gBAArF,UACI,UAACb,EAAA,EAAD,CAAOhE,UAAU,YAAYC,MAAO,CAAEG,MAAO,QAA7C,WACI,gBAAKJ,UAAU,UAAf,UACI,gBAAKC,MAAO,CAAE0B,WAAY,UAAY/B,IAAI,UAAUE,IAAK6G,EAAAA,OAE7D,gBAAK3G,UAAU,kBAAkBC,MAAO,CAAEsG,gBAAgB,OAAD,OAASQ,EAAAA,EAAT,SAEzD,UAAC/C,EAAA,EAAD,CAAOhE,UAAU,qBAAjB,WACI,gBAAKA,UAAU,UAAf,UACI,gBAAKJ,IAAI,UAAUE,IAAK6G,EAAAA,OAE5B,gBAAK1G,MAAO,CAAE2G,UAAW,qBAAzB,SACKT,OAEL,SAACnC,EAAA,EAAD,CAAOhE,UAAU,kBAAkBC,MAAO,CACtC6G,OAAQ,iCACTnH,UAAU,MAFb,UAIQ,SAACqH,EAAA,EAAD,iBAShC,8BAEQxF,GACI,gBAAKxB,UAAU,sBAAsBC,MAAO,CAAE8D,UAAW,sBAAzD,UACI,iBAAK9D,MAAO,CAAEsG,gBAAgB,OAAD,OAASC,EAAAA,EAAT,KAA0BzC,UAAW,qBAAsB0C,mBAAoB,gBAAiBC,iBAAkB,aAA/I,WACI,gBAAK1G,UAAU,UAAf,UACI,gBAAKJ,IAAI,UAAUE,IAAK6G,EAAAA,OAE5B,gBAAK3G,UAAU,iBAAiBC,MAAO,CAAE2G,UAAW,QAApD,SACKtD,GAAW,UAAKlB,YAK7B,UAAC4B,EAAA,EAAD,CAAO/D,MAAO,CAAE4G,SAAU,SAAUC,OAAQ,OAAQ/C,UAAW,SAAWpE,UAAU,MAAMkF,eAAe,gBAAzG,WACI,UAACb,EAAA,EAAD,CAAOhE,UAAU,YAAYC,MAAO,CAAEG,MAAO,OAA7C,WACI,gBAAKJ,UAAU,UAAf,UACI,gBAAKJ,IAAI,UAAUE,IAAK6G,EAAAA,OAE5B,iBAAK3G,UAAU,kBAAkBC,MAAO,CAAEsG,gBAAgB,OAAD,OAASQ,EAAAA,EAAT,MAAzD,WACI,SAAC/C,EAAA,EAAD,CAAOhE,UAAU,cAAjB,UAEQ,SAACT,EAAA,EAAD,OAGR,SAACyE,EAAA,EAAD,CAAOhE,UAAU,kBAAkBL,UAAU,MAA7C,UAEQ,SAACqH,EAAA,EAAD,aAKhB,SAAChD,EAAA,EAAD,CAAOhE,UAAU,aAAaC,MAAO,CAAEG,MAAO,OAA9C,UACI,gBAAKJ,UAAU,iBAAf,SACKsD,GAAW,UAAKlB,eAUrDZ,GACI,UAACwC,EAAA,EAAD,CAAOhE,UAAU,SAASL,UAAU,MAAMkF,eAAe,gBAAzD,WACI,SAACb,EAAA,EAAD,CAAOhE,UAAU,kBAAkBL,UAAU,MAA7C,UAEQ,SAACqH,EAAA,EAAD,OAGR,SAAClD,EAAA,EAAD,CAAY9D,UAAU,gDAAtB,2CAGJ,SAAC8D,EAAA,EAAD,CAAY9D,UAAU,gDAAtB,yCAInB,C","sources":["components/DetailCard.js","pages/Auth/signUp/SignUp.js"],"sourcesContent":["import React from 'react'\r\nimport { detailArr } from '../utils/commonUtils'\r\nimport { Stack, Typography } from '@mui/material'\r\nimport { colors } from '../utils/colors'\r\n\r\nexport default function DetailCard() {\r\n    return (\r\n        detailArr.map((item, index) => (\r\n            <Stack key={index} direction='row'>\r\n                <img alt={item.title} src={item.logo} />\r\n                <Stack className='details'>\r\n                    <Typography className='ff-Roboto fw-medium fs-14' style={{ color: colors.black }}>\r\n                        {item.title}\r\n                    </Typography>\r\n                    <Typography className='ff-Roboto fw-regular fs-12' style={{ color: colors.blackSecondary, width: '216px' }}>\r\n                        {item.subTitle}\r\n                    </Typography>\r\n                </Stack>\r\n            </Stack>\r\n        ))\r\n    )\r\n}\r\n","import './SignUp.scss';\r\nimport React, { useState } from 'react';\r\nimport diztextlogo from '../../../assets/images/diztextlogo.svg';\r\nimport wavesbg from '../../../assets/images/wavesbg.svg';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\nimport mobilewavybg from '../../../assets/images/mobilewavybg.svg'\r\nimport * as yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { Stack, Typography, useMediaQuery, InputAdornment, IconButton, TextField, Button, FormControlLabel, Checkbox } from '@mui/material'\r\nimport { setLoading } from '../../../redux/features/appSlice';\r\nimport { colors } from '../../../utils/colors'\r\nimport { buttonStyle1 } from '../../../utils/commonStyle';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { appapi } from '../../../api/apiClient';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showmessage } from '../../../utils/toastr';\r\nimport SocialCard from '../../../components/SocialCard';\r\nimport DetailCard from '../../../components/DetailCard';\r\n\r\n/**\r\n * Validation Schema for register\r\n */\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your Email')\r\n        .matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, 'Email is Invalid')\r\n        .required('Email is Required')\r\n        .trim(),\r\n    name: yup\r\n        .string('Enter your Name')\r\n        .min(3, 'Name must minimum of 3 characters')\r\n        .max(100, 'Name must maximum of 100 characters')\r\n        .required('Name is Required')\r\n        .trim(),\r\n    organization: yup\r\n        .string('Enter your Department')\r\n        .required('Organization is Required')\r\n        .max(50, 'Name must maximum of 50 characters')\r\n        .trim(),\r\n    password: yup\r\n        .string('Enter your Password')\r\n        // .min(8, 'Password must be minimum of 6 characters')\r\n        // .max(12, 'Password must be maximum of 12 characters')\r\n        .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,12}$/, 'Enter a password of minimum 8 characters with a combination of capital letters, small letters, symbols, and numbers.')\r\n        .required('Password is requried')\r\n        .trim(),\r\n    termsandCondition: yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\r\n})\r\n\r\nexport default function SignUp() {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n    const isMobile = useMediaQuery('(max-width:1000px)');\r\n\r\n    const [visibility, setVisibility] = useState(false);\r\n    const [formSubmitted, SetFormSubmitted] = useState(false);\r\n    const [message, setMessage] = useState({\r\n        status: '',\r\n        msg: ''\r\n    });\r\n\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        name: '',\r\n        organization: '',\r\n        password: '',\r\n        termsandCondition: false\r\n    })\r\n\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: data,\r\n        validationSchema: validationSchema,\r\n        validateOnBlur: true,\r\n        validateOnChange: true,\r\n        onSubmit: (values) => {\r\n            signUp(values)\r\n        },\r\n    })\r\n\r\n    /**\r\n    * \r\n    * @returns Redirect to initial page which is login\r\n    */\r\n    const onClickLoginRoute = () => navigate(`/`)\r\n\r\n    /**\r\n     * @param {email, password} obj \r\n     * Sign Up new user\r\n     */\r\n    const signUp = async (obj) => {\r\n        dispatch(setLoading(true))\r\n        let payload = {\r\n            emailId: obj.email,\r\n            name: obj.name,\r\n            password: obj.password,\r\n            organization: obj.organization,\r\n        }\r\n        const response = await appapi.post(`/auth/signup`, payload)\r\n        if (response.ok) {\r\n            const data = response.data;\r\n            dispatch(setLoading(false))\r\n            if (data.status === 'success') {\r\n                setMessage({\r\n                    status: data?.status,\r\n                    msg: data?.message\r\n                })\r\n                SetFormSubmitted(true)\r\n            } else {\r\n                setMessage({\r\n                    status: data.status,\r\n                    msg: data.message\r\n                })\r\n                showmessage(data.message, 3000, 'error')\r\n            }\r\n        } else {\r\n            dispatch(setLoading(false))\r\n            showmessage(`Something Went Wrong!`, 5000, 'error')\r\n        }\r\n    }\r\n\r\n    const SignUpForm = ({ handleSubmit, values, handleChange, errors, touched, handleBlur, isValid, dirty }) => {\r\n        return (\r\n            <>\r\n                <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> Sign up </Typography>\r\n                <form onSubmit={handleSubmit} style={{ minHeight: isMobile ? '670px' : 'initial' }}>\r\n                    <Stack>\r\n                        <Stack className='mt-17'>\r\n                            <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Email</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='email'\r\n                                name='email'\r\n                                value={values.email.toLowerCase().replace(/^\\s/g, '') || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                helperText={(touched.email || dirty.email) && errors.email}\r\n                            />\r\n                        </Stack>\r\n                        <Stack className='mt-14'>\r\n                            <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Name</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='name'\r\n                                name='name'\r\n                                value={values.name.replace(/^\\s/g, '') || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.name && Boolean(errors.name)}\r\n                                helperText={(touched.name || dirty.name) && errors.name}\r\n                            />\r\n                        </Stack>\r\n                        <Stack className='mt-14'>\r\n                            <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Organization</Typography>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='organization'\r\n                                name='organization'\r\n                                value={values.organization.replace(/^\\s/g, '') || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.organization && Boolean(errors.organization)}\r\n                                helperText={(touched.organization || dirty.organization) && errors.organization}\r\n                            />\r\n                        </Stack>\r\n                        <Stack className='mt-14 passwordField'>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                <Typography className='fs-14 ff-Roboto fw-medium mb-7' color={colors.blackMain}>Password</Typography>\r\n                            </div>\r\n                            <TextField\r\n                                fullWidth\r\n                                id='password'\r\n                                name='password'\r\n                                value={values.password.trim() || ''}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                type={visibility ? 'text' : 'password'}\r\n                                error={touched.password && Boolean(errors.password)}\r\n                                helperText={(touched.password || dirty.password) && errors.password}\r\n                                className={values.password ? 'helperTextStyleblack' : 'helperTextStylered'}\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                        <InputAdornment position='end'>\r\n                                            {\r\n                                                <IconButton onClick={() => setVisibility(!visibility)}>\r\n                                                    {visibility ? <VisibilityOutlinedIcon /> : <VisibilityOffOutlinedIcon />}\r\n                                                </IconButton>\r\n                                            }\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Stack>\r\n                        <Stack className='mt-17 checkboxStyle'>\r\n                            <FormControlLabel\r\n                                required\r\n                                control={\r\n                                    <Checkbox\r\n                                        sx={{\r\n                                            '&.Mui-checked': {\r\n                                                color: colors.primaryTxt,\r\n                                            },\r\n                                        }}\r\n                                        id='termsandCondition'\r\n                                        name='termsandCondition'\r\n                                        checked={!!values.termsandCondition}\r\n                                        onChange={handleChange} />\r\n                                }\r\n                                label={<Typography className='fs-12 ff-Roboto fw-regular black'>I agree to the Terms of Service and Privacy Policy</Typography>}\r\n                            />\r\n                        </Stack>\r\n                        <Button sx={buttonStyle1} disabled={!(dirty && isValid)} type='submit'>Sign up</Button>\r\n                        <Stack direction='row' className='mt-16' justifyContent='center'>\r\n                            <Typography className='ff-OpenSans fw-regular fs-12' color={colors.gray}>Already have an account? </Typography>\r\n                            <Typography onClick={onClickLoginRoute} className='ff-OpenSans fw-bold fs-12' color={colors.primaryDark} style={{ marginLeft: '11px', cursor: 'pointer' }}>Login Here</Typography>\r\n                        </Stack>\r\n                    </Stack>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const SignUpFormSubmitted = () => {\r\n        return (\r\n            <>\r\n                <Stack>\r\n                    <Typography className='fw-bold ff-Roboto createHeading' color={colors.primaryTxt}> {message.status === 'success' ? 'Successful!' : 'Failed!'}  </Typography>\r\n                    <Typography className='fs-12 ff-Roboto fw-regular' color={colors.blackMain} style={{ marginBottom: '6px' }}>\r\n                        {message.msg}\r\n                    </Typography>\r\n                    <Button sx={{ ...buttonStyle1, textTransform: 'capitalize', marginBottom: '0' }} onClick={onClickLoginRoute} type='submit'>Go Back To Login</Button>\r\n                </Stack>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='signUpContainer' style={{ padding: isMobile ? '16px' : '0', minHeight: isMobile ? 'auto' : '100vh' }}>\r\n            {\r\n                <>\r\n                    {\r\n                        formSubmitted ?\r\n                            <>\r\n                                {\r\n                                    isMobile ?\r\n                                        <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n                                            <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n                                                <div className='logoImg'>\r\n                                                    <img alt='dizLogo' src={diztextlogo} />\r\n                                                </div>\r\n                                                <div className='innerContainer' style={{ marginTop: '240px' }}>\r\n                                                    {SignUpFormSubmitted()}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <Stack style={{ maxWidth: '1368px', margin: 'auto' }} direction='row' justifyContent='space-between'>\r\n                                            <Stack className='leftStack' style={{ width: '100%' }}>\r\n                                                <div className='logoImg'>\r\n                                                    <img style={{ visibility: 'hidden' }} alt='dizLogo' src={diztextlogo} />\r\n                                                </div>\r\n                                                <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                                                </div>\r\n                                                <Stack className='formSubmittedStyle'>\r\n                                                    <div className='logoImg'>\r\n                                                        <img alt='dizLogo' src={diztextlogo} />\r\n                                                    </div>\r\n                                                    <div style={{ marginTop: '22.916666666667vh' }}>\r\n                                                        {SignUpFormSubmitted()}\r\n                                                    </div>\r\n                                                    <Stack className='socialContainer' style={{\r\n                                                        margin: '30.208333333333vh auto 0 auto'\r\n                                                    }} direction='row'>\r\n                                                        {\r\n                                                            <SocialCard />\r\n                                                        }\r\n                                                    </Stack>\r\n                                                </Stack>\r\n                                            </Stack>\r\n                                        </Stack>\r\n                                }\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {\r\n                                    isMobile ?\r\n                                        <div className='mobileViewContainer' style={{ minHeight: 'calc(100vh - 32px)' }}>\r\n                                            <div style={{ backgroundImage: `url(${mobilewavybg})`, minHeight: 'calc(100vh - 32px)', backgroundPosition: 'center bottom', backgroundRepeat: 'no-repeat' }}>\r\n                                                <div className='logoImg'>\r\n                                                    <img alt='dizLogo' src={diztextlogo} />\r\n                                                </div>\r\n                                                <div className='innerContainer' style={{ marginTop: '28px' }}>\r\n                                                    {SignUpForm({ ...formik })}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <Stack style={{ maxWidth: '1368px', margin: 'auto', minHeight: '768px' }} direction='row' justifyContent='space-between'>\r\n                                            <Stack className='leftStack' style={{ width: '50%' }}>\r\n                                                <div className='logoImg'>\r\n                                                    <img alt='dizLogo' src={diztextlogo} />\r\n                                                </div>\r\n                                                <div className='detailContainer' style={{ backgroundImage: `url(${wavesbg})` }}>\r\n                                                    <Stack className='detailsList'>\r\n                                                        {\r\n                                                            <DetailCard />\r\n                                                        }\r\n                                                    </Stack>\r\n                                                    <Stack className='socialContainer' direction='row'>\r\n                                                        {\r\n                                                            <SocialCard />\r\n                                                        }\r\n                                                    </Stack>\r\n                                                </div>\r\n                                            </Stack>\r\n                                            <Stack className='rightStack' style={{ width: '50%' }}>\r\n                                                <div className='innerContainer'>\r\n                                                    {SignUpForm({ ...formik })}\r\n                                                </div>\r\n                                            </Stack>\r\n                                        </Stack>\r\n                                }\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n            {\r\n                isMobile ?\r\n                    <Stack className='footer' direction='row' justifyContent='space-between'>\r\n                        <Stack className='socialContainer' direction='row'>\r\n                            {\r\n                                <SocialCard />\r\n                            }\r\n                        </Stack>\r\n                        <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n                    </Stack>\r\n                    :\r\n                    <Typography className='fs-10 ff-Roboto fw-medium black dizcopyrights'>© 2022 Do it Zero Inc.</Typography>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n"],"names":["DetailCard","detailArr","item","index","direction","alt","title","src","logo","className","style","color","colors","width","subTitle","validationSchema","yup","email","matches","required","trim","name","min","max","organization","password","termsandCondition","oneOf","SignUp","dispatch","useDispatch","navigate","useNavigate","isMobile","useMediaQuery","useState","visibility","setVisibility","formSubmitted","SetFormSubmitted","status","msg","message","setMessage","data","formik","useFormik","enableReinitialize","initialValues","validateOnBlur","validateOnChange","onSubmit","values","signUp","onClickLoginRoute","obj","setLoading","payload","emailId","appapi","response","ok","showmessage","SignUpForm","handleSubmit","handleChange","errors","touched","handleBlur","isValid","dirty","Typography","minHeight","Stack","TextField","fullWidth","id","value","toLowerCase","replace","onChange","onBlur","error","Boolean","helperText","display","justifyContent","alignItems","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOutlined","VisibilityOffOutlined","FormControlLabel","control","Checkbox","sx","checked","label","Button","buttonStyle1","disabled","marginLeft","cursor","SignUpFormSubmitted","marginBottom","textTransform","padding","backgroundImage","mobilewavybg","backgroundPosition","backgroundRepeat","diztextlogo","marginTop","maxWidth","margin","wavesbg","SocialCard"],"sourceRoot":""}